{"version":3,"sources":["redux/types/auth.js","redux/types/polls.js","redux/types/loading.js","redux/types/user.js","redux/actions/auth.js","redux/actions/polls.js","redux/actions/loading.js","components/common/Header.js","pages/Error404Page.js","pages/account/UserProfilePage.js","config/theme.js","components/polls/PollCard.js","components/polls/Filter.js","components/common/Loader.js","components/polls/UserCard.js","components/polls/AnalysisData.js","components/polls/PollButtons.js","components/common/YouMustLogin.js","components/polls/AnswerDetails.js","components/polls/PollDetailsCard.js","pages/polls/PollDetailsPage.js","pages/polls/CreatePollPage.js","components/polls/LeaderboardCard.js","pages/LeaderboardPage.js","components/common/PrivateRoute.js","components/user/UpdateProfileCard.js","redux/actions/user.js","pages/account/MyProfilePage.js","pages/account/AccountSettingsPage.js","components/common/MyFab.js","pages/polls/MyPollsPage.js","pages/auth/SignInPage.js","pages/auth/SignUpPage.js","pages/auth/ForgetPasswordPage.js","pages/auth/ResetPasswordPage.js","pages/auth/VerifyEmailPage.js","pages/auth/VerifyCodePage.js","components/common/GuestRoute.js","pages/polls/HomePage.js","App.js","reportWebVitals.js","redux/reducers/user.js","helpers/functions.js","redux/reducers/polls.js","redux/reducers/loading.js","redux/reducers/auth.js","redux/reducers/index.js","redux/selectors/common.js","api/index.js","config/constants.js","redux/sagas/polls.js","redux/sagas/user.js","redux/sagas/auth.js","redux/sagas/index.js","redux/store.js","index.js"],"names":["LOGOUT","SIGNUP_REQUEST","SIGNIN_REQUEST","SIGNIN_RESPONSE","SIGNIN_ERROR","SIGNUP_ERROR","CREATE_POLL_REQUEST","CREATE_POLL_RESPONSE","ANSWER_POLL_REQUEST","GET_POLL_REQUEST","GET_POLL_RESPONSE","GET_ALL_POLLS_REQUEST","GET_ALL_POLLS_RESPONSE","GET_MY_POLLS_REQUEST","GET_MY_POLLS_RESPONSE","GET_LEADERBOARD_REQUEST","GET_LEADERBOARD_RESPONSE","FILTER_POLLS","CLEAR_POLL_INPUTS","UPDATE_POLL_INPUT","CLEAR_POLL_DATA","SET_LOADING","SET_LOADING_STATE","UPLOAD_IMAGE_REQUEST","UPLOAD_IMAGE_RESPONSE","SAVE_INFO_REQUEST","SAVE_INFO_RESPONSE","CHANGE_PASSWORD_REQUEST","signInResponse","userData","type","payload","setSignInError","error","setSignUpError","getPollRequest","pollId","getPollResponse","pollData","clearPollInputs","setLoading","isLoading","useStyles","makeStyles","theme","root","flexGrow","homeButton","color","iconStyle","marginRight","avatarStyle","border","title","navContainer","flex","Header","classes","history","useHistory","dispatch","useDispatch","useState","anchorEl","setAnchorEl","open","Boolean","useSelector","state","user","isLoggedIn","profile","profilePicture","firstname","lastname","handleClose","to","push","className","AppBar","position","variant","Toolbar","edge","Button","onClick","HomeFilled","size","Grid","container","justify","alignItems","spacing","item","PlusOutlined","ApartmentOutlined","TableOutlined","ml","Avatar","alt","src","IconButton","aria-label","aria-controls","aria-haspopup","event","currentTarget","UserOutlined","Menu","id","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","onClose","authItems","path","text","icon","LoginOutlined","UserAddOutlined","loggedInItems","LogoutOutlined","map","index","MenuItem","renderMenuItems","Error404Page","UserProfilePage","MAIN_COLOR","createMuiTheme","palette","primary","main","secondary","styles","cardHeader","borderBottom","textTransform","backgroundColor","cardContentContainer","userContainer","borderRight","pollDataContainer","buttonContainer","marginTop","display","height","width","PollCard","poll","createdBy","_id","md","lg","xl","sm","xs","Card","CardHeader","CardContent","sizes","Typography","gutterBottom","fullWidth","prototype","PropTypes","string","isRequired","filterContainerStyle","marginBottom","Filter","filterBy","polls","ToggleButtonGroup","value","exclusive","onChange","e","userId","filterPolls","ToggleButton","loadingContainer","top","left","justifyContent","Loader","CircularProgress","userCardContainerStyle","userImageContainerStyle","userNameStyle","badgeStyle","right","borderRadius","userDataContainer","UserCard","isProfile","createdAt","score","CardMedia","image","Chip","label","createdPolls","length","answeredPolls","moment","format","bool","number","AnalysisData","data","totalAnswersCount","option1Count","option2Count","Divider","PollButtons","options","onOptionClick","arrayOf","func","YouMustLogin","Box","AnswerDetails","answerDetails","answer","mb","BorderlessTableOutlined","containerStyle","PollDetailsCard","pollDetails","option1","option2","StarFilled","StarOutlined","withSnackbar","enqueueSnackbar","loading","useParams","useEffect","p","option","answerPollRequest","creatingState","setCreatingState","onInputUpdate","key","updatePollInput","direction","Backdrop","style","zIndex","component","paragraph","TextField","margin","multiline","helperText","target","required","name","placeholder","disabled","LeaderboardCard","LeaderboardPage","leaderboard","PrivateRoute","Component","rest","render","labels","email","newPassword","confirmPassword","UpdateProfileCard","onInfoSave","onPasswordSave","onImageUpload","imagePreview","info","password","onInfoInputUpdate","onPasswordInputUpdate","savingImage","savingInfo","savingPassword","imageRef","useRef","ref","hidden","current","click","m","Object","keys","Validator","isEmail","setLoadingState","loaders","setLoaders","setInfo","setPassword","setImagePreview","saveInfoRequest","changePasswordRequest","newImage","files","reader","FileReader","addEventListener","result","readAsDataURL","imageData","AccountSettingsPage","floatingActionButtonStyle","bottom","MyFab","Fab","MyPollsPage","myPolls","status","align","subTitle","extra","loginError","auth","form","setForm","Alert","severity","loginData","signUpError","terms","setTerms","dialog","setDialog","Checkbox","checked","Dialog","aria-labelledby","DialogTitle","DialogContent","dividers","DialogActions","autoFocus","signUpData","ForgetPasswordPage","ResetPasswordPage","VerifyEmailPage","VerifyCodePage","GuestRoute","filteredPolls","App","Container","exact","HomePage","MyProfilePage","SignInPage","SignUpPage","CreatePollPage","PollDetailsPage","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","INITIAL_STATE","token","filterPollsBy","sort","a","b","filter","answeredBy","indexOf","formatAuthorizationHeaders","newPollData","login","signup","signInError","rootReducer","combineReducers","action","newState","merge","profilePictureUrl","concat","getToken","API","route","method","headers","axios","url","createPoll","answerPoll","getAllPolls","getMyPolls","getLeaderboard","getPollDetails","getPollDetailsWatcher","createPollWatcher","answerPollWatcher","getAllPollsWatcher","getMyPollsWatcher","getLeaderboardWatcher","put","select","call","response","console","takeLatest","updateUserInfo","updateUserImage","changePassword","updateUserImageWatcher","updateUserInfoWatcher","changePasswordWatcher","formData","FormData","append","signIn","signUp","signUpWatcher","signInWatcher","rootSaga","all","persistConfig","storage","logger","createLogger","sagaMiddleware","createSagaMiddleware","persistedReducer","persistReducer","store","createStore","applyMiddleware","persistor","persistStore","run","ReactDOM","ThemeProvider","maxSnack","autoHideDuration","disableWindowBlurListener","document","getElementById"],"mappings":"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","file":"static/js/main.aa7d7dc6.chunk.js","sourcesContent":["const LOGOUT = 'LOGOUT';\r\nconst SIGNUP_REQUEST = 'SIGNUP_REQUEST';\r\nconst SIGNIN_REQUEST = 'SIGNIN_REQUEST';\r\nconst SIGNIN_RESPONSE = 'SIGNIN_RESPONSE';\r\nconst SIGNIN_ERROR = 'SIGNIN_ERROR';\r\nconst SIGNUP_ERROR = 'SIGNUP_ERROR';\r\nexport {\r\n  LOGOUT,\r\n  SIGNIN_REQUEST,\r\n  SIGNIN_RESPONSE,\r\n  SIGNUP_REQUEST,\r\n  SIGNIN_ERROR,\r\n  SIGNUP_ERROR,\r\n}\r\n","const CREATE_POLL_REQUEST = 'CREATE_POLL_REQUEST';\r\nconst CREATE_POLL_RESPONSE = 'CREATE_POLL_RESPONSE';\r\nconst ANSWER_POLL_REQUEST = 'ANSWER_POLL_REQUEST';\r\nconst GET_POLL_REQUEST = 'GET_POLL_REQUEST';\r\nconst GET_POLL_RESPONSE = 'GET_POLL_RESPONSE';\r\nconst GET_ALL_POLLS_REQUEST = 'GET_ALL_POLLS_REQUEST';\r\nconst GET_ALL_POLLS_RESPONSE = 'GET_ALL_POLLS_RESPONSE';\r\nconst GET_MY_POLLS_REQUEST = 'GET_MY_POLLS_REQUEST';\r\nconst GET_MY_POLLS_RESPONSE = 'GET_MY_POLLS_RESPONSE';\r\nconst GET_LEADERBOARD_REQUEST = 'GET_LEADERBOARD_REQUEST';\r\nconst GET_LEADERBOARD_RESPONSE = 'GET_LEADERBOARD_RESPONSE';\r\nconst FILTER_POLLS = 'FILTER_POLLS';\r\nconst CLEAR_POLL_INPUTS = 'CLEAR_POLL_INPUTS';\r\nconst UPDATE_POLL_INPUT = 'UPDATE_POLL_INPUT';\r\nconst CLEAR_POLL_DATA = 'CLEAR_POLL_DATA';\r\n\r\nexport {\r\n  CLEAR_POLL_DATA,\r\n  CLEAR_POLL_INPUTS,\r\n  UPDATE_POLL_INPUT,\r\n  ANSWER_POLL_REQUEST,\r\n  CREATE_POLL_REQUEST,\r\n  CREATE_POLL_RESPONSE,\r\n  GET_MY_POLLS_REQUEST,\r\n  GET_MY_POLLS_RESPONSE,\r\n  GET_LEADERBOARD_REQUEST,\r\n  GET_LEADERBOARD_RESPONSE,\r\n  GET_ALL_POLLS_REQUEST,\r\n  GET_ALL_POLLS_RESPONSE,\r\n  GET_POLL_REQUEST,\r\n  GET_POLL_RESPONSE,\r\n  FILTER_POLLS,\r\n}\r\n\r\n","const SET_LOADING = 'SET_LOADING';\r\nexport {\r\n  SET_LOADING,\r\n}\r\n","const SET_LOADING_STATE = 'SET_LOADING_STATE';\r\nconst UPLOAD_IMAGE_REQUEST = 'UPLOAD_IMAGE_REQUEST';\r\nconst UPLOAD_IMAGE_RESPONSE = 'UPLOAD_IMAGE_RESPONSE';\r\nconst SAVE_INFO_REQUEST = 'SAVE_INFO_REQUEST';\r\nconst SAVE_INFO_RESPONSE = 'SAVE_INFO_RESPONSE';\r\nconst CHANGE_PASSWORD_REQUEST = 'CHANGE_PASSWORD_REQUEST';\r\nconst CHANGE_PASSWORD_RESPONSE = 'CHANGE_PASSWORD_RESPONSE';\r\nexport {\r\n  CHANGE_PASSWORD_REQUEST,\r\n  CHANGE_PASSWORD_RESPONSE,\r\n  SAVE_INFO_REQUEST,\r\n  SAVE_INFO_RESPONSE,\r\n  SET_LOADING_STATE,\r\n  UPLOAD_IMAGE_REQUEST,\r\n  UPLOAD_IMAGE_RESPONSE\r\n}\r\n","import {LOGOUT, SIGNIN_ERROR, SIGNIN_REQUEST, SIGNIN_RESPONSE, SIGNUP_ERROR, SIGNUP_REQUEST} from \"../types\";\r\nconst signInRequest = (loginData) => ({\r\n  type: SIGNIN_REQUEST,\r\n  payload: {loginData}\r\n})\r\nconst signInResponse = (userData) => ({\r\n  type: SIGNIN_RESPONSE,\r\n  payload: {userData}\r\n})\r\nconst signUpRequest = (signUpData) => ({\r\n  type: SIGNUP_REQUEST,\r\n  payload: {signUpData}\r\n});\r\nconst setSignInError = (error) => ({\r\n  type: SIGNIN_ERROR,\r\n  error\r\n})\r\nconst setSignUpError = (error) => ({\r\n  type: SIGNUP_ERROR,\r\n  error\r\n})\r\nconst logout = () => ({\r\n  type: LOGOUT\r\n});\r\nexport {\r\n  logout,\r\n  signInRequest,\r\n  signInResponse,\r\n  signUpRequest,\r\n  setSignInError,\r\n  setSignUpError,\r\n}\r\n","import {\r\n  CREATE_POLL_REQUEST,\r\n  CREATE_POLL_RESPONSE,\r\n  ANSWER_POLL_REQUEST,\r\n  GET_POLL_REQUEST,\r\n  GET_POLL_RESPONSE,\r\n  GET_ALL_POLLS_REQUEST,\r\n  GET_ALL_POLLS_RESPONSE,\r\n  FILTER_POLLS,\r\n  UPDATE_POLL_INPUT,\r\n  CLEAR_POLL_INPUTS,\r\n  GET_MY_POLLS_RESPONSE,\r\n  GET_MY_POLLS_REQUEST, GET_LEADERBOARD_REQUEST, GET_LEADERBOARD_RESPONSE,\r\n} from '../types';\r\n\r\n\r\nconst createPollRequest = () => ({\r\n  type: CREATE_POLL_REQUEST\r\n});\r\nconst createPollResponse = (poll) => ({\r\n  type: CREATE_POLL_RESPONSE,\r\n  payload: {poll}\r\n})\r\nconst answerPollRequest = (pollId, answer) => ({\r\n  type: ANSWER_POLL_REQUEST,\r\n  payload: {pollId, answer}\r\n});\r\nconst getPollRequest = (pollId) => ({\r\n  type: GET_POLL_REQUEST,\r\n  payload: {pollId}\r\n});\r\nconst getPollResponse = (pollData) => ({\r\n  type: GET_POLL_RESPONSE,\r\n  payload: {pollData}\r\n})\r\nconst getAllPollsRequest = () => ({\r\n  type: GET_ALL_POLLS_REQUEST\r\n});\r\nconst getAllPollsResponse = (polls) => ({\r\n  type: GET_ALL_POLLS_RESPONSE,\r\n  payload: {polls}\r\n})\r\nconst getMyPollsRequest = () => ({\r\n  type: GET_MY_POLLS_REQUEST\r\n});\r\nconst getMyPollsResponse = (polls) => ({\r\n  type: GET_MY_POLLS_RESPONSE,\r\n  payload: {polls}\r\n})\r\nconst getLeaderboardRequest = () => ({\r\n  type: GET_LEADERBOARD_REQUEST\r\n});\r\nconst getLeaderboardResponse = (leaderboard) => ({\r\n  type: GET_LEADERBOARD_RESPONSE,\r\n  payload: {leaderboard}\r\n})\r\nconst filterPolls = (filterBy, userId) => ({\r\n  type: FILTER_POLLS,\r\n  payload: {filterBy, userId}\r\n});\r\nconst updatePollInput = (key, value) => ({\r\n  type: UPDATE_POLL_INPUT,\r\n  payload: {key, value}\r\n});\r\nconst clearPollInputs = () => ({\r\n  type: CLEAR_POLL_INPUTS\r\n});\r\nexport {\r\n  updatePollInput,\r\n  clearPollInputs,\r\n  createPollRequest,\r\n  createPollResponse,\r\n  getAllPollsRequest,\r\n  getAllPollsResponse,\r\n  getPollRequest,\r\n  getPollResponse,\r\n  answerPollRequest,\r\n  filterPolls,\r\n  getMyPollsRequest,\r\n  getMyPollsResponse,\r\n  getLeaderboardRequest,\r\n  getLeaderboardResponse\r\n}\r\n","import {SET_LOADING} from \"../types\";\r\n\r\nconst setLoading = (isLoading) => ({\r\n  type: SET_LOADING,\r\n  payload: {isLoading}\r\n});\r\nexport {setLoading};\r\n","import React, {useState} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport {\r\n  ApartmentOutlined,\r\n  HomeFilled,\r\n  LoginOutlined,\r\n  LogoutOutlined, PlusOutlined,\r\n  TableOutlined,\r\n  UserAddOutlined,\r\n  UserOutlined\r\n} from \"@ant-design/icons\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {useHistory, Link} from 'react-router-dom';\r\nimport {logout} from \"../../redux/actions\";\r\nimport {Avatar, Box, Button, Grid} from \"@material-ui/core\";\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  homeButton: {\r\n   color: 'white'\r\n  },\r\n  iconStyle: {\r\n    marginRight: 5,\r\n  },\r\n  avatarStyle: {\r\n    marginRight: 5,\r\n    border: `2px solid white`\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n  navContainer: {\r\n    flex: 1\r\n  }\r\n}));\r\nconst Header = () => {\r\n    const classes = useStyles();\r\n    const history = useHistory();\r\n    const dispatch = useDispatch();\r\n    const [anchorEl, setAnchorEl] = useState(null);\r\n    const open = Boolean(anchorEl);\r\n    const {isLoggedIn, profile} = useSelector(state => state.user);\r\n    const {profilePicture, firstname, lastname} = profile;\r\n    const handleMenu = (event) => {\r\n      setAnchorEl(event.currentTarget);\r\n    };\r\n\r\n    const handleClose = (to) => {\r\n      setAnchorEl(null);\r\n      if (to === '/logout') {\r\n        dispatch(logout());\r\n      } else {\r\n        history.push(to);\r\n      }\r\n    };\r\n    const renderMenuItems = () => {\r\n      const authItems = [\r\n        {path: '/sign-in', text: 'Sign In', icon: <LoginOutlined />},\r\n        {path: '/sign-up', text: 'Sign Up', icon: <UserAddOutlined />}\r\n      ];\r\n      const loggedInItems = [\r\n        {path: '/profile', text: 'My Profile', icon: <UserOutlined />},\r\n        // {path: '/settings', text: 'Account Settings', icon: <SettingFilled />},\r\n        {path: '/logout', text: 'Logout', icon: <LogoutOutlined />},\r\n      ];\r\n      let menuItems = isLoggedIn ? loggedInItems : authItems;\r\n      return menuItems.map((item, index) => {\r\n        return (\r\n          <MenuItem onClick={() => handleClose(item.path)} key={index}>\r\n            {item.icon} <Box ml={1}>{item.text}</Box>\r\n          </MenuItem>\r\n        )\r\n      })\r\n    }\r\n    return (\r\n      <div className={classes.root}>\r\n        <AppBar position=\"static\" variant={'elevation'}>\r\n          <Toolbar>\r\n            <Link to={'/'} edge=\"start\">\r\n              <Button variant={'text'} className={classes.homeButton} onClick={()=>{}}>\r\n                <HomeFilled size={24} className={classes.iconStyle} /> Would you rather?\r\n              </Button>\r\n            </Link>\r\n            <Grid container className={classes.navContainer} justify={'center'} alignItems={'center'} spacing={3}>\r\n              <Grid item>\r\n                <Link to={'/'}>\r\n                  <Button className={classes.homeButton}><HomeFilled className={classes.iconStyle}/> Home</Button>\r\n                </Link>\r\n              </Grid>\r\n              {\r\n                isLoggedIn &&\r\n                <Grid item>\r\n                  <Link to={'/polls/add'}>\r\n                    <Button className={classes.homeButton}><PlusOutlined className={classes.iconStyle}/> Create\r\n                      Poll</Button>\r\n                  </Link>\r\n                </Grid>\r\n              }\r\n              <Grid item>\r\n                <Link to={'/leaderboard'}>\r\n                  <Button className={classes.homeButton}><ApartmentOutlined className={classes.iconStyle}/> Leaderboard</Button>\r\n                </Link>\r\n              </Grid>\r\n              {\r\n                isLoggedIn &&\r\n                <Grid item>\r\n                  <Link to={'/my-polls'}>\r\n                    <Button className={classes.homeButton}><TableOutlined className={classes.iconStyle}/> My Polls</Button>\r\n                  </Link>\r\n                </Grid>\r\n              }\r\n            </Grid>\r\n            <Box ml={'auto'}>\r\n              {\r\n                isLoggedIn &&\r\n                  <Button className={classes.homeButton} onClick={() => handleClose('/profile')} variant={'text'}>\r\n                    <Avatar alt={`${firstname}'s Profile Picture`} src={profilePicture} className={classes.avatarStyle}/> {firstname} {lastname}\r\n                  </Button>\r\n              }\r\n              <IconButton\r\n                aria-label=\"account of current user\"\r\n                aria-controls=\"menu-appbar\"\r\n                aria-haspopup=\"true\"\r\n                onClick={handleMenu}\r\n                color=\"inherit\"\r\n              >\r\n                <UserOutlined />\r\n              </IconButton>\r\n              <Menu\r\n                id=\"menu-appbar\"\r\n                anchorEl={anchorEl}\r\n                anchorOrigin={{\r\n                  vertical: 'top',\r\n                  horizontal: 'right',\r\n                }}\r\n                keepMounted\r\n                transformOrigin={{\r\n                  vertical: 'top',\r\n                  horizontal: 'right',\r\n                }}\r\n                open={open}\r\n                onClose={handleClose}\r\n              >\r\n                {renderMenuItems()}\r\n              </Menu>\r\n            </Box>\r\n          </Toolbar>\r\n        </AppBar>\r\n      </div>\r\n);\r\n}\r\nexport default Header;\r\n","import React from \"react\";\r\nconst Error404Page = () => {\r\n  return (\r\n    <h1>Error 404 Page</h1>\r\n  )\r\n}\r\nexport default Error404Page;\r\n","import React from \"react\";\r\nconst UserProfilePage = () => {\r\n  return (\r\n    <h1>User Profile Page</h1>\r\n  )\r\n}\r\nexport default UserProfilePage;\r\n","import {createMuiTheme} from \"@material-ui/core\";\r\nexport const MAIN_COLOR = '#01579b';\r\nexport const SECONDARY_COLOR = '#546e7a';\r\nconst theme = createMuiTheme({\r\n  palette: {\r\n    primary: {main: MAIN_COLOR},\r\n    secondary: {main: SECONDARY_COLOR},\r\n    // type: \"dark\"\r\n  },\r\n});\r\nexport default theme;\r\n","import React from \"react\";\r\nimport {Avatar, Button, Card, CardContent, CardHeader, Grid, Typography} from \"@material-ui/core\";\r\nimport {Link} from \"react-router-dom\";\r\nimport {makeStyles} from \"@material-ui/styles\";\r\nimport {MAIN_COLOR} from \"../../config/theme\";\r\nimport PropTypes from 'prop-types';\r\nconst styles = makeStyles({\r\n  cardHeader: {\r\n    borderBottom: `2px solid ${MAIN_COLOR}`,\r\n    textTransform: 'capitalize',\r\n    backgroundColor: `${MAIN_COLOR}20`\r\n  },\r\n  cardContentContainer: {},\r\n  userContainer: {\r\n    borderRight: `2px solid ${MAIN_COLOR}`\r\n  },\r\n  pollDataContainer: {\r\n    flex: 1,\r\n  },\r\n  buttonContainer: {\r\n    marginTop: 16,\r\n    display: 'block'\r\n  },\r\n  avatarStyle: {\r\n    height: 100,\r\n    width: 100\r\n  },\r\n})\r\nconst PollCard = ({poll}) => {\r\n  const classes = styles();\r\n  const {title, createdBy, _id} = poll;\r\n  const {firstname, lastname, profilePicture} = createdBy || {};\r\n  return (\r\n    <Grid item md={8} lg={7} xl={7} sm={10} xs={12}>\r\n      <Link to={`/polls/${_id}`}>\r\n        <Card variant={\"elevation\"}>\r\n          <CardHeader className={classes.cardHeader} title={`${firstname || ''} ${lastname || ''} Asked...`}/>\r\n          <CardContent className={classes.cardContentContainer}>\r\n            <Grid container justify={'center'} alignItems={'center'} spacing={2}>\r\n              <Grid className={classes.userContainer} item>\r\n                <Avatar className={classes.avatarStyle} sizes={'large'} variant={\"square\"} src={profilePicture} />\r\n              </Grid>\r\n              <Grid className={classes.pollDataContainer} item>\r\n                <Typography gutterBottom={true}>{title || 'Would you rather...?'}</Typography>\r\n              </Grid>\r\n            </Grid>\r\n            <Button variant={'contained'} className={classes.buttonContainer} color={'primary'} fullWidth={true}>\r\n              View Poll\r\n            </Button>\r\n          </CardContent>\r\n        </Card>\r\n      </Link>\r\n    </Grid>\r\n  )\r\n}\r\nPollCard.prototype = {\r\n  title: PropTypes.string.isRequired,\r\n  _id: PropTypes.string.isRequired,\r\n  createdBy: {\r\n    firstname: PropTypes.string,\r\n    lastname: PropTypes.string,\r\n    profilePicture: PropTypes.string,\r\n  }\r\n}\r\nexport default PollCard;\r\n","import React from \"react\";\r\nimport {ToggleButtonGroup, ToggleButton} from '@material-ui/lab';\r\nimport {Grid} from \"@material-ui/core\";\r\nimport {makeStyles} from \"@material-ui/styles\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {filterPolls} from \"../../redux/actions\";\r\nconst styles = makeStyles({\r\n  filterContainerStyle: {\r\n    marginBottom: 20\r\n  }\r\n})\r\nconst Filter = () => {\r\n  const classes = styles();\r\n  const {filterBy} = useSelector(state => state.polls);\r\n  const {_id} = useSelector(state => state.user.profile);\r\n  const dispatch = useDispatch();\r\n  const onButtonClick = (e, value) => {\r\n    if (value !== filterBy) {\r\n      dispatch(filterPolls(value, _id));\r\n    }\r\n  }\r\n  return (\r\n    <Grid container alignItems={'center'} justify={'center'} className={classes.filterContainerStyle}>\r\n\r\n    <ToggleButtonGroup\r\n      value={filterBy}\r\n      exclusive\r\n      onChange={onButtonClick}\r\n      aria-label=\"filter polls\"\r\n    >\r\n      <ToggleButton value=\"top\">\r\n        Top\r\n      </ToggleButton>\r\n      <ToggleButton value=\"latest\">\r\n        Latest\r\n      </ToggleButton>\r\n      <ToggleButton value=\"answered\">\r\n        Answered\r\n      </ToggleButton>\r\n      <ToggleButton value=\"unanswered\">\r\n        Unanswered\r\n      </ToggleButton>\r\n    </ToggleButtonGroup>\r\n    </Grid>\r\n  )\r\n}\r\nexport default Filter;\r\n","import {makeStyles} from \"@material-ui/styles\";\r\nimport {Box, CircularProgress} from \"@material-ui/core\";\r\nimport React from \"react\";\r\n\r\nconst styles = makeStyles({\r\n\r\n  loadingContainer: {\r\n    position: 'absolute',\r\n    width: '100%',\r\n    height: '100%',\r\n    top: 0,\r\n    left: 0,\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center'\r\n  }\r\n});\r\nconst Loader = () => {\r\n  const classes = styles();\r\n  return (\r\n    <Box className={classes.loadingContainer}>\r\n      <CircularProgress />\r\n    </Box>\r\n  )\r\n};\r\nexport default Loader;\r\n","import {Box, Card, CardContent, CardMedia, Chip, Grid, Typography} from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport {makeStyles} from \"@material-ui/styles\";\r\nimport moment from \"moment\";\r\nimport {MAIN_COLOR} from \"../../config/theme\";\r\nimport PropTypes from 'prop-types';\r\nconst styles = makeStyles({\r\n  userCardContainerStyle: {\r\n    // marginRight: 20\r\n  },\r\n  userImageContainerStyle: {\r\n    height: 300,\r\n    width: 250\r\n  },\r\n  userNameStyle: {\r\n    textTransform: 'capitalize'\r\n  },\r\n  cardHeader: {\r\n    borderBottom: `2px solid ${MAIN_COLOR}`,\r\n    textTransform: 'capitalize',\r\n  },\r\n  cardContentContainer: {},\r\n  userContainer: {\r\n    borderRight: `2px solid ${MAIN_COLOR}`\r\n  },\r\n  badgeStyle: {\r\n    top: -5,\r\n    right: -4,\r\n    position: 'absolute',\r\n    height: 40,\r\n    width: 40,\r\n    borderRadius: 20\r\n  },\r\n  userDataContainer: {\r\n    flex: 1,\r\n    position: 'relative'\r\n  },\r\n  buttonContainer: {\r\n    marginTop: 16,\r\n    display: 'block'\r\n  },\r\n  avatarStyle: {\r\n    height: 100,\r\n    width: 100\r\n  },\r\n})\r\nconst UserCard = ({user, isProfile = false, createdAt}) => {\r\n  const {profilePicture, firstname, lastname, score} = user;\r\n  const classes = styles();\r\n  return (\r\n    <Grid item className={classes.userCardContainerStyle}>\r\n      <Card variant={'elevation'}>\r\n        <CardMedia className={classes.userImageContainerStyle} image={profilePicture} src={profilePicture} />\r\n        <CardContent>\r\n          <Typography className={classes.cardHeader} variant={'h5'} gutterBottom={true}>{firstname} {lastname}</Typography>\r\n          <Typography gutterBottom={true} variant={'subtitle2'}>Score: <Chip color={'primary'} size={'medium'} label={score}/></Typography>\r\n          {\r\n            isProfile?\r\n              <Grid className={classes.userDataContainer} item>\r\n                <Typography gutterBottom={true}>Polls Created: <strong>{user.createdPolls.length}</strong></Typography>\r\n                <Typography gutterBottom={true}>Polls Answered: <strong>{user.answeredPolls.length}</strong></Typography>\r\n              </Grid>\r\n              :\r\n              <Typography\r\n                className={classes.userNameStyle}\r\n                variant={'subtitle2'}>\r\n                Created At: {moment(createdAt).format('YYYY/MM/DD HH:MMA')}\r\n              </Typography>\r\n          }\r\n        </CardContent>\r\n      </Card>\r\n    </Grid>\r\n  )\r\n}\r\nUserCard.prototype = {\r\n  isProfile: PropTypes.bool,\r\n  createdAt: PropTypes.string.isRequired,\r\n  user:{\r\n    firstname: PropTypes.string,\r\n    lastname: PropTypes.string,\r\n    profilePicture: PropTypes.string,\r\n    score: PropTypes.number\r\n  }\r\n}\r\nexport default UserCard;\r\n","import {Badge, Box, Chip, Divider, Typography} from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport PropTypes from 'prop-types';\r\nimport {makeStyles} from \"@material-ui/styles\";\r\nconst styles = makeStyles({\r\n\r\n  buttonContainer: {\r\n    marginBottom: 16,\r\n  },\r\n})\r\nconst AnalysisData = ({data}) => {\r\n  const {\r\n    totalAnswersCount,\r\n    option1Count,\r\n    option2Count\r\n  } = data;\r\n  const classes = styles();\r\n  return (\r\n    <Box>\r\n      <Divider className={classes.buttonContainer} />\r\n      <Typography gutterBottom={true}>\r\n        Total Votes: <strong>{totalAnswersCount}</strong>\r\n      </Typography>\r\n      <Typography gutterBottom={true}>\r\n        Option 1 Votes: <Chip color={'primary'} size={'medium'} label={`${(option1Count / totalAnswersCount) * 100}% (${option1Count})` } />\r\n      </Typography>\r\n      <Typography gutterBottom={true}>\r\n        Option 2 Votes: <Chip color={'primary'} size={'medium'} label={`${(option2Count / totalAnswersCount) * 100}% (${option2Count})` } />\r\n      </Typography>\r\n    </Box>\r\n  )\r\n}\r\nAnalysisData.prototype = {\r\n  data: {\r\n    totalAnswersCount: PropTypes.number,\r\n    option1Count: PropTypes.number,\r\n    option2Count: PropTypes.number,\r\n  }\r\n}\r\nexport default AnalysisData;\r\n","import {Button, Grid} from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport {makeStyles} from \"@material-ui/styles\";\r\nimport PropTypes from 'prop-types';\r\nconst styles = makeStyles({\r\n  buttonContainer: {\r\n    marginBottom: 6,\r\n  },\r\n})\r\nconst PollButtons = ({options, onOptionClick}) => {\r\n  const classes = styles();\r\n  return (\r\n    <Grid\r\n      className={classes.buttonContainer}\r\n      container\r\n      justify={'space-between'}\r\n      alignItems={'center'}\r\n      spacing={3}>\r\n        <Grid item xs={6}>\r\n          <Button onClick={() => onOptionClick(options[0])} variant={'contained'} color={'primary'} fullWidth={true}>\r\n            Option 1\r\n          </Button>\r\n        </Grid>\r\n        <Grid item xs={6}>\r\n          <Button onClick={() => onOptionClick(options[1])} variant={'contained'} color={'secondary'} fullWidth={true}>\r\n            Option 2\r\n          </Button>\r\n        </Grid>\r\n    </Grid>\r\n  )\r\n}\r\nPollButtons.prototype = {\r\n  options: PropTypes.arrayOf(PropTypes.string).isRequired,\r\n  onOptionClick: PropTypes.func.isRequired\r\n}\r\nexport default PollButtons;\r\n","import {Button, Typography} from \"@material-ui/core\";\r\nimport {Link} from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst YouMustLogin = ({to}) => {\r\n  return (\r\n    <Box>\r\n      <Typography>You must login to {to}</Typography>\r\n      <Link to={'/sign-in'}>\r\n        <Button variant={'contained'} color={'primary'}>Login</Button>\r\n      </Link>\r\n    </Box>\r\n  )\r\n}\r\nYouMustLogin.prototype = {\r\n  to: PropTypes.string.isRequired\r\n}\r\nexport default YouMustLogin;\r\n","import {Box, Typography} from \"@material-ui/core\";\r\nimport moment from \"moment\";\r\nimport { BorderlessTableOutlined} from \"@ant-design/icons\";\r\nimport PropTypes from 'prop-types';\r\nconst AnswerDetails = ({answerDetails}) => {\r\n  const {answer, createdAt} = answerDetails;\r\n  return (\r\n    <Box mb={2}>\r\n      <Typography>Your Answer</Typography>\r\n      <Typography variant={'subtitle1'}><BorderlessTableOutlined /> {answer}</Typography>\r\n      <Typography gutterBottom={true}>On: {moment(createdAt).format('YYYY/MM/DD HH:MMA')}</Typography>\r\n    </Box>\r\n  )\r\n}\r\nAnswerDetails.prototype = {\r\n  answerDetails: {\r\n    answer: PropTypes.string.isRequired,\r\n    createdAt: PropTypes.string.isRequired\r\n  }\r\n}\r\nexport default AnswerDetails;\r\n","import React from \"react\";\r\nimport {Avatar, Box, Button, Card, CardContent, CardHeader, Divider, Grid, Typography} from \"@material-ui/core\";\r\nimport {Link} from \"react-router-dom\";\r\nimport {makeStyles} from \"@material-ui/styles\";\r\nimport {MAIN_COLOR} from \"../../config/theme\";\r\nimport {BorderOutlined, StarFilled, StarOutlined} from \"@ant-design/icons\";\r\nimport AnalysisData from \"./AnalysisData\";\r\nimport PollButtons from \"./PollButtons\";\r\nimport YouMustLogin from \"../common/YouMustLogin\";\r\nimport AnswerDetails from \"./AnswerDetails\";\r\nimport PropTypes from 'prop-types';\r\nconst styles = makeStyles({\r\n  cardHeader: {\r\n    borderBottom: `2px solid ${MAIN_COLOR}`,\r\n    textTransform: 'capitalize',\r\n    backgroundColor: `${MAIN_COLOR}20`\r\n  },\r\n  title: {\r\n    textTransform: 'capitalize',\r\n  },\r\n  containerStyle: {\r\n    flex: 1\r\n  },\r\n  userContainer: {\r\n    borderRight: `2px solid ${MAIN_COLOR}`\r\n  },\r\n  pollDataContainer: {\r\n    flex: 1,\r\n  },\r\n  buttonContainer: {\r\n    marginBottom: 16,\r\n  },\r\n  iconStyle: {\r\n    marginRight: 10\r\n  },\r\n})\r\nconst PollDetailsCard = ({pollDetails, answerDetails, isLoggedIn, onOptionClick}) => {\r\n  const classes = styles();\r\n  const {title, option1, option2, totalAnswersCount, option1Count, option2Count} = pollDetails;\r\n  return (\r\n    <Grid className={classes.containerStyle} item={true} >\r\n        <Card variant={\"elevation\"}>\r\n          <CardHeader className={classes.cardHeader} title={'Would you rather...?'}/>\r\n          <CardContent>\r\n            <Typography className={classes.title} gutterBottom={true} variant={'h5'}>{title}</Typography>\r\n            <Typography className={classes.title} gutterBottom={true} variant={'h6'}>\r\n              {answerDetails?.answer === option1 ? <StarFilled className={classes.iconStyle} /> : <StarOutlined className={classes.iconStyle} />}\r\n              {option1}\r\n            </Typography>\r\n            <Typography className={classes.title} gutterBottom={true} variant={'h6'}>\r\n              {answerDetails?.answer === option2 ? <StarFilled className={classes.iconStyle} /> : <StarOutlined className={classes.iconStyle} />}\r\n              {option2}\r\n            </Typography>\r\n            <Divider className={classes.buttonContainer} />\r\n            {\r\n              answerDetails ?\r\n                <AnswerDetails answerDetails={answerDetails} />\r\n                : isLoggedIn ?\r\n                  <PollButtons options={[option1, option2]} onOptionClick={onOptionClick} />\r\n                  : <YouMustLogin to={'answer to this poll'} />\r\n            }\r\n            <AnalysisData data={{\r\n              totalAnswersCount,\r\n              option1Count,\r\n              option2Count,\r\n            }} />\r\n          </CardContent>\r\n        </Card>\r\n    </Grid>\r\n  )\r\n}\r\nPollDetailsCard.prototype = {\r\n  pollDetails: {\r\n    title: PropTypes.string.isRequired,\r\n    option1: PropTypes.string.isRequired,\r\n    option2: PropTypes.string.isRequired,\r\n    totalAnswersCount: PropTypes.number.isRequired,\r\n    option1Count: PropTypes.number.isRequired,\r\n    option2Count: PropTypes.number.isRequired\r\n  },\r\n  answerDetails: {\r\n    answer: PropTypes.string.isRequired,\r\n    createdAt: PropTypes.string.isRequired\r\n  },\r\n  isLoggedIn: PropTypes.bool.isRequired,\r\n  onOptionClick: PropTypes.func.isRequired\r\n}\r\nexport default PollDetailsCard;\r\n","import React, {useEffect, useState} from \"react\";\r\nimport {\r\n  Box, Card, CardMedia,\r\n  Grid,\r\n} from \"@material-ui/core\";\r\nimport {answerPollRequest, getAllPollsRequest, getPollRequest} from \"../../redux/actions\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport PollCard from \"../../components/polls/PollCard\";\r\nimport Filter from \"../../components/polls/Filter\";\r\nimport Loader from \"../../components/common/Loader\";\r\nimport {withSnackbar} from \"notistack\";\r\nimport {useParams} from \"react-router\";\r\nimport UserCard from \"../../components/polls/UserCard\";\r\nimport PollDetailsCard from \"../../components/polls/PollDetailsCard\";\r\n\r\nconst PollDetailsPage = ({enqueueSnackbar}) => {\r\n  const dispatch = useDispatch();\r\n  const {pollData} = useSelector(state => state.polls);\r\n  const {isLoading} = useSelector(state => state.loading);\r\n  const {pollId} = useParams();\r\n  const {pollDetails, answerDetails} = pollData;\r\n  const {isLoggedIn} = useSelector(state => state.user);\r\n  const user = pollDetails?.createdBy;\r\n  useEffect(() => {\r\n    enqueueSnackbar('Fetching poll details...', {variant: 'info'});\r\n    dispatch(getPollRequest(pollId));\r\n  }, []);\r\n\r\n  const onOptionClick = option => {\r\n    dispatch(answerPollRequest(pollId, option));\r\n  }\r\n\r\n  if (isLoading) {\r\n    return (\r\n      <Loader/>\r\n    )\r\n  }\r\n  return (\r\n    <Box p={5}>\r\n      <Grid container alignItems={'flex-start'} justify={'center'} spacing={4}>\r\n        {user && <UserCard user={user} />}\r\n        {pollDetails && <PollDetailsCard onOptionClick={onOptionClick} isLoggedIn={isLoggedIn} pollDetails={pollDetails} answerDetails={answerDetails} />}\r\n      </Grid>\r\n    </Box>\r\n  )\r\n}\r\nexport default withSnackbar(PollDetailsPage);\r\n","import React, {useEffect, useState} from \"react\";\r\nimport {\r\n  Backdrop,\r\n  Box,\r\n  Button,\r\n  Card,\r\n  CardContent,\r\n  CircularProgress,\r\n  Grid,\r\n  TextField,\r\n  Typography\r\n} from \"@material-ui/core\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {clearPollInputs, createPollRequest, updatePollInput} from \"../../redux/actions\";\r\nimport {withSnackbar} from \"notistack\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport Loader from \"../../components/common/Loader\";\r\nconst CreatePollPage = ({enqueueSnackbar}) => {\r\n  const dispatch = useDispatch();\r\n  const {title, option1, option2} = useSelector(state => state.polls);\r\n  const {isLoading} = useSelector(state => state.loading);\r\n  const [creatingState, setCreatingState] = useState('');\r\n  const resetInputs = () => {dispatch(clearPollInputs())}\r\n  const onInputUpdate = (key, value) => {\r\n    dispatch(updatePollInput(key, value));\r\n  };\r\n  const onSubmit = () => {\r\n    enqueueSnackbar('Creating your poll...', {variant: 'info'});\r\n    dispatch(createPollRequest());\r\n  }\r\n  useEffect(() => {\r\n    if (isLoading) {\r\n      setCreatingState('creating');\r\n    } else {\r\n      if (creatingState === 'creating') {\r\n        setCreatingState('created');\r\n      }\r\n    }\r\n  }, [isLoading]);\r\n  if (isLoading) {\r\n    return <Loader />\r\n  }\r\n  if (creatingState === 'created') {\r\n    enqueueSnackbar('Your poll has been created successfully!', {variant: 'success'});\r\n    return <Redirect to={'/'} />;\r\n  }\r\n  return (\r\n    <Box p={3}>\r\n      <Grid container justify={'center'} alignItems={'center'} direction={'column'}>\r\n        <Grid item xl={6} lg={8} md={10} sm={12}>\r\n          <Card variant={'elevation'}>\r\n            <CardContent>\r\n              <form>\r\n                <Grid container justify={'center'} alignItems={'center'} direction={'column'}>\r\n                  <Backdrop style={{zIndex: 9}} open={isLoading}><CircularProgress/></Backdrop>\r\n                  <Typography\r\n                    variant={'h3'}\r\n                    gutterBottom={true}\r\n                    component={'h3'}>Would you rather...?</Typography>\r\n                  <Typography\r\n                    variant={'body2'}\r\n                    paragraph={true}\r\n                    gutterBottom={true}\r\n                    component={'p'}>Please try to be descriptive and precise as possible</Typography>\r\n                  <TextField\r\n                    margin={\"normal\"}\r\n                    label={'Title'}\r\n                    variant={'outlined'}\r\n                    size={'medium'}\r\n                    fullWidth={true}\r\n                    multiline={true}\r\n                    helperText={'This field is required'}\r\n                    value={title}\r\n                    onChange={(event) => onInputUpdate('title', event.target.value)}\r\n                    required={true}\r\n                    error={false}\r\n                    name={'poll_title'}\r\n                    placeholder={'i.e. eating apples or bananas'}/>\r\n                  <TextField\r\n                    label={'Option 1'}\r\n                    variant={'outlined'}\r\n                    size={'medium'}\r\n                    margin={\"normal\"}\r\n                    fullWidth={true}\r\n                    required={true}\r\n                    error={false}\r\n                    helperText={'This field is required'}\r\n                    value={option1}\r\n                    onChange={(event) => onInputUpdate('option1', event.target.value)}\r\n                    name={'poll_first_option'}\r\n                    placeholder={'i.e. apples'}/>\r\n                  <TextField\r\n                    label={'Option 2'}\r\n                    variant={'outlined'}\r\n                    margin={\"normal\"}\r\n                    size={'medium'}\r\n                    fullWidth={true}\r\n                    helperText={'This field is required'}\r\n                    required={true}\r\n                    error={false}\r\n                    value={option2}\r\n                    onChange={(event) => onInputUpdate('option2', event.target.value)}\r\n                    name={'poll_second_option'}\r\n                    placeholder={'i.e. bananas'}/>\r\n                    <Box>\r\n                      <Button style={{marginRight: 10}} onClick={resetInputs} variant={'outlined'}>Reset</Button>\r\n                      <Button onClick={onSubmit} disabled={title === '' || option1 === '' || option2 === ''} variant={\"contained\"} color={'primary'}>Create</Button>\r\n                    </Box>\r\n                </Grid>\r\n              </form>\r\n            </CardContent>\r\n          </Card>\r\n        </Grid>\r\n      </Grid>\r\n    </Box>\r\n  )\r\n}\r\nexport default withSnackbar(CreatePollPage);\r\n","import React from \"react\";\r\nimport {Avatar, Card, CardContent, Chip, Grid, Typography} from \"@material-ui/core\";\r\nimport {makeStyles} from \"@material-ui/styles\";\r\nimport {MAIN_COLOR} from \"../../config/theme\";\r\nimport PropTypes from 'prop-types';\r\nconst styles = makeStyles({\r\n  cardHeader: {\r\n    borderBottom: `2px solid ${MAIN_COLOR}`,\r\n    textTransform: 'capitalize',\r\n  },\r\n  cardContentContainer: {},\r\n  userContainer: {\r\n    borderRight: `2px solid ${MAIN_COLOR}`\r\n  },\r\n  badgeStyle: {\r\n    top: -5,\r\n    right: -4,\r\n    position: 'absolute',\r\n    height: 40,\r\n    width: 40,\r\n    borderRadius: 20\r\n  },\r\n  userDataContainer: {\r\n    flex: 1,\r\n    position: 'relative'\r\n  },\r\n  buttonContainer: {\r\n    marginTop: 16,\r\n    display: 'block'\r\n  },\r\n  avatarStyle: {\r\n    height: 100,\r\n    width: 100\r\n  },\r\n})\r\nconst LeaderboardCard = ({user}) => {\r\n  const {profilePicture, firstname ,lastname, score, createdPolls, answeredPolls} = user;\r\n  const classes = styles();\r\n  return (\r\n    <Grid item md={8} lg={7} xl={7} sm={10} xs={12}>\r\n      <Card variant={\"elevation\"}>\r\n        <CardContent className={classes.cardContentContainer}>\r\n          <Grid container justify={'center'} alignItems={'center'} spacing={2}>\r\n            <Grid className={classes.userContainer} item>\r\n              <Avatar className={classes.avatarStyle} sizes={'large'} variant={\"square\"} src={profilePicture} />\r\n            </Grid>\r\n            <Grid className={classes.userDataContainer} item>\r\n              <Chip className={classes.badgeStyle} color={\"primary\"} size={'medium'} label={score}/>\r\n              <Typography className={classes.cardHeader} variant={'h5'} gutterBottom={true}>{firstname} {lastname}</Typography>\r\n              <Typography gutterBottom={true}>Polls Created: <strong>{createdPolls.length}</strong></Typography>\r\n              <Typography gutterBottom={true}>Polls Answered: <strong>{answeredPolls.length}</strong></Typography>\r\n            </Grid>\r\n          </Grid>\r\n        </CardContent>\r\n      </Card>\r\n    </Grid>\r\n  )\r\n}\r\nLeaderboardCard.prototype = {\r\n  user: {\r\n    profilePicture: PropTypes.string,\r\n    firstname: PropTypes.string,\r\n    lastname: PropTypes.string,\r\n    score: PropTypes.number,\r\n    createdPolls: PropTypes.arrayOf(PropTypes.string),\r\n    answeredPolls: PropTypes.arrayOf(PropTypes.string)\r\n  }\r\n}\r\nexport default LeaderboardCard;\r\n","import React, {useEffect} from \"react\";\r\nimport {\r\n  Box,\r\n  Grid,\r\n} from \"@material-ui/core\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport LeaderboardCard from \"../components/polls/LeaderboardCard\";\r\nimport {getLeaderboardRequest} from \"../redux/actions\";\r\nimport Loader from \"../components/common/Loader\";\r\n\r\nconst LeaderboardPage = () => {\r\n  const dispatch = useDispatch();\r\n  const {leaderboard} = useSelector(state => state.polls);\r\n  const {isLoading} = useSelector(state => state.loading);\r\n  useEffect(() => {\r\n    dispatch(getLeaderboardRequest());\r\n  }, []);\r\n  if (isLoading) {\r\n    return (\r\n      <Loader/>\r\n    )\r\n  }\r\n  return (\r\n    <Box p={5}>\r\n      <Grid container alignItems={'center'} justify={'center'} spacing={2}>\r\n        {leaderboard.map((user) => <LeaderboardCard user={user} key={user._id} />)}\r\n      </Grid>\r\n    </Box>\r\n  )\r\n}\r\nexport default LeaderboardPage;\r\n","import React from \"react\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {Route, Redirect} from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst PrivateRoute = ({path, component: Component, ...rest}) => {\r\n  let {isLoggedIn} = useSelector(state => state.user);\r\n    return <Route {...rest} path={path} render={() => {\r\n      return isLoggedIn ?\r\n        <Component /> :\r\n        <Redirect to={'/sign-in'} />\r\n    }}/>\r\n}\r\nPrivateRoute.prototype = {\r\n  path: PropTypes.string.isRequired,\r\n  component: PropTypes.func.isRequired,\r\n}\r\nexport default PrivateRoute;\r\n","import React, {useRef} from \"react\";\r\nimport {\r\n  Avatar,\r\n  Backdrop,\r\n  Box,\r\n  Button,\r\n  Card,\r\n  CardContent,\r\n  CardHeader, CircularProgress,\r\n  Divider,\r\n  Grid, TextField,\r\n  Typography\r\n} from \"@material-ui/core\";\r\nimport {makeStyles} from \"@material-ui/styles\";\r\nimport {MAIN_COLOR} from \"../../config/theme\";\r\nimport Validator from \"validator\";\r\nimport PropTypes from 'prop-types';\r\nconst styles = makeStyles({\r\n  cardHeader: {\r\n    borderBottom: `2px solid ${MAIN_COLOR}`,\r\n    textTransform: 'capitalize',\r\n  },\r\n  profilePicture: {\r\n    width: 150,\r\n    height: 150\r\n  },\r\n  title: {\r\n    textTransform: 'capitalize',\r\n  },\r\n  containerStyle: {\r\n    flex: 1\r\n  },\r\n  userContainer: {\r\n    borderRight: `2px solid ${MAIN_COLOR}`\r\n  },\r\n  pollDataContainer: {\r\n    flex: 1,\r\n  },\r\n  buttonContainer: {\r\n    marginBottom: 16,\r\n  },\r\n  iconStyle: {\r\n    marginRight: 10\r\n  },\r\n});\r\nconst labels = {\r\n  firstname: 'First Name',\r\n  lastname: 'Last Name',\r\n  email: 'Email',\r\n  newPassword: 'New Password',\r\n  confirmPassword: 'Confirm Password'\r\n};\r\nconst UpdateProfileCard = ({\r\n onInfoSave,\r\n onPasswordSave,\r\n onImageUpload,\r\n imagePreview,\r\n info,\r\n password,\r\n onInfoInputUpdate,\r\n onPasswordInputUpdate,\r\n savingImage,\r\n savingInfo,\r\n savingPassword\r\n}) => {\r\n  const imageRef = useRef(null);\r\n  const onUploadButtonClick = () => {\r\n    imageRef.current.click();\r\n  }\r\n  const infoDisabledState = () => {\r\n    return info.firstname === '' || info.lastname === '' || info.email === '' || !Validator.isEmail(info.email) || savingInfo;\r\n  }\r\n  const passwordDisabledState = () => {\r\n    return password.newPassword !== password.confirmPassword || password.newPassword === '' || savingPassword;\r\n  }\r\n  const classes = styles();\r\n  return (\r\n    <Grid className={classes.containerStyle} item={true} >\r\n        <Card variant={\"elevation\"}>\r\n          <CardHeader className={classes.cardHeader} title={'Edit info...'}/>\r\n          <CardContent>\r\n\r\n            <Typography variant={'h5'} className={classes.cardHeader} gutterBottom={true}>Change Profile Picture</Typography>\r\n            <form>\r\n              <input\r\n                ref={imageRef}\r\n                type=\"file\"\r\n                name=\"profilePicture\"\r\n                hidden={true}\r\n                onChange={onImageUpload}/>\r\n            </form>\r\n            <Box position={'relative'}>\r\n              <Grid container justify={'space-between'} alignItems={'center'}>\r\n                <Avatar src={imagePreview} variant={\"square\"} className={classes.profilePicture} />\r\n                <Button\r\n                  variant={\"contained\"}\r\n                  color={'primary'}\r\n                  onClick={onUploadButtonClick}\r\n                  disabled={savingImage}>\r\n                  {savingImage && <CircularProgress size={24} className={classes.iconStyle} color={'inherit'}/>}Upload New Image\r\n                </Button>\r\n              </Grid>\r\n            </Box>\r\n            <Box m={2} />\r\n            <Divider />\r\n            <Box m={2} />\r\n            <Typography variant={'h5'} className={classes.cardHeader} gutterBottom={true}>Personal Info</Typography>\r\n            {Object.keys(info).map((key, index) => {\r\n              return <TextField\r\n                label={labels[key]}\r\n                key={key}\r\n                variant={'outlined'}\r\n                margin={\"normal\"}\r\n                size={'medium'}\r\n                fullWidth={true}\r\n                helperText={'This field is required'}\r\n                required={true}\r\n                value={info[key]}\r\n                onChange={(event) => onInfoInputUpdate(key, event.target.value)}\r\n                name={key}\r\n                placeholder={key}/>\r\n            })}\r\n            <Grid container justify={'center'}>\r\n              <Button\r\n                disabled={infoDisabledState()}\r\n                size={'large'}\r\n                variant={'contained'}\r\n                color={'primary'}\r\n                onClick={onInfoSave}>\r\n                {savingInfo && <CircularProgress size={24} className={classes.iconStyle} color={'inherit'}/>}\r\n                Save Info\r\n              </Button>\r\n            </Grid>\r\n            <Box m={2} />\r\n            <Divider />\r\n            <Box m={2} />\r\n            <Typography variant={'h5'} className={classes.cardHeader} gutterBottom={true}>Reset Password</Typography>\r\n            {Object.keys(password).map((key, index) => {\r\n              return <TextField\r\n                label={labels[key]}\r\n                key={key}\r\n                variant={'outlined'}\r\n                margin={\"normal\"}\r\n                size={'medium'}\r\n                type={'password'}\r\n                fullWidth={true}\r\n                helperText={'This field is required'}\r\n                required={true}\r\n                value={info[key]}\r\n                onChange={(event) => onPasswordInputUpdate(key, event.target.value)}\r\n                name={key}\r\n                placeholder={'Your password...'}/>\r\n            })}\r\n            <Grid container justify={'center'}>\r\n              <Button\r\n                disabled={passwordDisabledState()}\r\n                size={'large'}\r\n                variant={'contained'}\r\n                color={'primary'}\r\n                onClick={onPasswordSave}>\r\n                {savingPassword && <CircularProgress size={24} className={classes.iconStyle} color={'inherit'}/>}\r\n                Change Password\r\n              </Button>\r\n            </Grid>\r\n            <Box m={2} />\r\n          </CardContent>\r\n        </Card>\r\n    </Grid>\r\n  )\r\n}\r\nUpdateProfileCard.prototype = {\r\n  onInfoSave: PropTypes.func.isRequired,\r\n  onPasswordSave: PropTypes.func.isRequired,\r\n  onImageUpload: PropTypes.func.isRequired,\r\n  imagePreview: PropTypes.string.isRequired,\r\n  info: {\r\n    firstname: PropTypes.string.isRequired,\r\n    lastname: PropTypes.string.isRequired,\r\n    email: PropTypes.string.isRequired\r\n  },\r\n  password: {\r\n    newPassword: PropTypes.string.isRequired,\r\n    confirmPassword: PropTypes.string.isRequired\r\n  },\r\n  onInfoInputUpdate: PropTypes.func.isRequired,\r\n  onPasswordInputUpdate: PropTypes.func.isRequired,\r\n  savingImage: PropTypes.bool.isRequired,\r\n  savingInfo: PropTypes.bool.isRequired,\r\n  savingPassword: PropTypes.bool.isRequired\r\n}\r\nexport default UpdateProfileCard;\r\n","import {\r\n  CHANGE_PASSWORD_REQUEST, CHANGE_PASSWORD_RESPONSE,\r\n  SAVE_INFO_REQUEST,\r\n  SAVE_INFO_RESPONSE,\r\n  SET_LOADING_STATE,\r\n  UPLOAD_IMAGE_REQUEST,\r\n  UPLOAD_IMAGE_RESPONSE\r\n} from \"../types\";\r\n\r\nconst setLoadingState = (key, value) => ({\r\n  type: SET_LOADING_STATE,\r\n  payload: {key, value}\r\n});\r\nconst uploadImageRequest = (imageData) => ({\r\n  type: UPLOAD_IMAGE_REQUEST,\r\n  payload: {imageData}\r\n});\r\nconst uploadImageResponse = (profilePictureUrl) => ({\r\n  type: UPLOAD_IMAGE_RESPONSE,\r\n  payload: {profilePictureUrl}\r\n});\r\nconst saveInfoRequest = (info) => ({\r\n  type: SAVE_INFO_REQUEST,\r\n  payload: {info}\r\n});\r\nconst saveInfoResponse = (info) => ({\r\n  type: SAVE_INFO_RESPONSE,\r\n  payload: {info}\r\n});\r\nconst changePasswordRequest = (password) => ({\r\n  type: CHANGE_PASSWORD_REQUEST,\r\n  payload: {password}\r\n});\r\nconst changePasswordResponse = () => ({\r\n  type: CHANGE_PASSWORD_RESPONSE\r\n});\r\nexport {\r\n  uploadImageResponse,\r\n  uploadImageRequest,\r\n  setLoadingState,\r\n  saveInfoResponse,\r\n  saveInfoRequest,\r\n  changePasswordResponse,\r\n  changePasswordRequest\r\n}\r\n\r\n","import React, {useEffect, useState} from \"react\";\r\nimport {Box, Grid} from \"@material-ui/core\";\r\nimport UserCard from \"../../components/polls/UserCard\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport UpdateProfileCard from \"../../components/user/UpdateProfileCard\";\r\nimport {withSnackbar} from \"notistack\";\r\nimport {changePasswordRequest, saveInfoRequest, uploadImageRequest} from \"../../redux/actions/user\";\r\nconst MyProfilePage = ({enqueueSnackbar}) => {\r\n  const {\r\n    profile,\r\n    savingImage,\r\n    savingInfo,\r\n    savingPassword\r\n  } = useSelector(state => state.user);\r\n  const [loaders, setLoaders] = useState({info: '', password: '', image: ''});\r\n  let {firstname, lastname, email, profilePicture} = profile;\r\n  const [info, setInfo] = useState({\r\n    firstname,\r\n    lastname,\r\n    email\r\n  });\r\n  const [password, setPassword] = useState({\r\n    newPassword: '',\r\n    confirmPassword: '',\r\n  });\r\n  const [imagePreview, setImagePreview] = useState(profilePicture);\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    if (!savingInfo && loaders.info === 'loading') {\r\n      enqueueSnackbar('Info Updated Successfully.', {variant: 'success'});\r\n      setLoaders({...loaders, info: ''});\r\n    }\r\n    if (!savingImage && loaders.image === 'loading') {\r\n      enqueueSnackbar('Image Uploaded Successfully.', {variant: 'success'});\r\n      setLoaders({...loaders, image: ''});\r\n    }\r\n    if (!savingPassword && loaders.password === 'loading') {\r\n      setPassword({newPassword: '', confirmPassword: ''});\r\n      enqueueSnackbar('Password Changed Successfully.', {variant: 'success'});\r\n      setLoaders({...loaders, password: ''});\r\n    }\r\n  }, [savingImage, savingInfo, savingPassword]);\r\n  const onInfoInputUpdate = (key, value) => {\r\n    setInfo({...info, [key]: value});\r\n  }\r\n  const onPasswordInputUpdate = (key, value) => {\r\n    setPassword({...password, [key]: value});\r\n  }\r\n  const onInfoSave = () => {\r\n    dispatch(saveInfoRequest(info));\r\n    setLoaders({...loaders, info : 'loading'});\r\n    enqueueSnackbar('Updating info...', {variant: 'info'})\r\n  };\r\n  const onPasswordSave = () => {\r\n    dispatch(changePasswordRequest(password));\r\n    setLoaders({...loaders, password: 'loading'});\r\n    enqueueSnackbar('Changing password...', {variant: 'info'})\r\n  };\r\n  const onImageUpload = (event) => {\r\n    let newImage = event.target.files[0];\r\n    const reader = new FileReader();\r\n    reader.addEventListener(\"load\", () => {\r\n      setImagePreview(reader.result);\r\n    });\r\n    reader.readAsDataURL(newImage);\r\n    dispatch(uploadImageRequest(newImage));\r\n    setLoaders({...loaders, image: 'loading'});\r\n    enqueueSnackbar('Uploading...', {variant: 'info'})\r\n  };\r\n  return (\r\n    <Box p={5}>\r\n      <Grid container alignItems={'flex-start'} justify={'center'} spacing={4}>\r\n        <UserCard isProfile={true} user={profile} />\r\n        <UpdateProfileCard\r\n          imagePreview={imagePreview}\r\n          onInfoSave={onInfoSave}\r\n          onPasswordSave={onPasswordSave}\r\n          onImageUpload={onImageUpload}\r\n          info={info}\r\n          password={password}\r\n          onInfoInputUpdate={onInfoInputUpdate}\r\n          onPasswordInputUpdate={onPasswordInputUpdate}\r\n          savingImage={savingImage}\r\n          savingInfo={savingInfo}\r\n          savingPassword={savingPassword}\r\n        />\r\n      </Grid>\r\n    </Box>\r\n  )\r\n}\r\nexport default withSnackbar(MyProfilePage);\r\n","import React from \"react\";\r\nconst AccountSettingsPage = () => {\r\n  return (\r\n    <h1>Feature Will be added later...</h1>\r\n  )\r\n}\r\nexport default AccountSettingsPage;\r\n","import {Fab} from \"@material-ui/core\";\r\nimport {PlusOutlined} from \"@ant-design/icons\";\r\nimport {Link} from \"react-router-dom\";\r\nimport React from \"react\";\r\nimport {makeStyles} from \"@material-ui/styles\";\r\nimport PropTypes from 'prop-types';\r\nconst styles = makeStyles({\r\n  floatingActionButtonStyle: {\r\n    position:'fixed',\r\n    bottom: 50,\r\n    right: 50\r\n  },\r\n});\r\n\r\nconst MyFab = ({to}) => {\r\nconst classes = styles();\r\n  return (\r\n    <Link to={to} className={classes.floatingActionButtonStyle}>\r\n      <Fab color=\"primary\" aria-label=\"add\">\r\n        <PlusOutlined />\r\n      </Fab>\r\n    </Link>\r\n  )\r\n}\r\nMyFab.prototype = {\r\n  to: PropTypes.string.isRequired\r\n}\r\nexport default MyFab\r\n","import React, {useEffect} from \"react\";\r\nimport {\r\n  Box, Button,\r\n  Grid, Typography,\r\n} from \"@material-ui/core\";\r\nimport {getMyPollsRequest} from \"../../redux/actions\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport PollCard from \"../../components/polls/PollCard\";\r\nimport Loader from \"../../components/common/Loader\";\r\nimport MyFab from \"../../components/common/MyFab\";\r\nimport {Result} from \"antd\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\nconst MyPollsPage = () => {\r\n  const dispatch = useDispatch();\r\n  const {myPolls} = useSelector(state => state.polls);\r\n  const {isLoading} = useSelector(state => state.loading);\r\n  useEffect(() => {\r\n    dispatch(getMyPollsRequest());\r\n  }, []);\r\n  if (isLoading) {\r\n    return (\r\n      <Loader/>\r\n    )\r\n  }\r\n  return (\r\n    <Box p={5}>\r\n      <MyFab to={'/polls/add'}/>\r\n      <Grid container alignItems={'center'} justify={'center'} spacing={2}>\r\n        {myPolls.map((poll) => <PollCard poll={poll} key={poll._id} />)}\r\n        {myPolls.length === 0 &&\r\n          <Result\r\n            status=\"500\"\r\n            title={<Typography align={'center'} variant={'h5'} gutterBottom={true}>Oops!</Typography>}\r\n            subTitle={<Typography align={'center'} variant={'h6'} gutterBottom={true}>You haven't created any polls...</Typography>}\r\n            extra={<Link to={'/polls/add'}>\r\n              <Grid container justify={'center'}>\r\n                <Button color={\"primary\"} variant={'contained'}>Create the first one?</Button>\r\n              </Grid>\r\n            </Link>}\r\n          />}\r\n      </Grid>\r\n    </Box>\r\n  )\r\n}\r\nexport default MyPollsPage;\r\n","import React, {useEffect, useState} from \"react\";\r\nimport {Box, Button, Card, CardContent, CircularProgress, Grid, TextField, Typography} from \"@material-ui/core\";\r\nimport {withSnackbar} from \"notistack\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {Link} from \"react-router-dom\";\r\nimport {setSignInError, setSignUpError,  signInRequest} from \"../../redux/actions\";\r\nimport {Alert} from \"@material-ui/lab\";\r\nconst SignInPage = ({enqueueSnackbar}) => {\r\n  const dispatch = useDispatch();\r\n  const {loginError} = useSelector(state => state.auth);\r\n  const {isLoading} = useSelector(state => state.loading);\r\n  const [form, setForm] = useState({email: '', password: ''});\r\n  useEffect(() => {\r\n    dispatch(setSignInError(''));\r\n    dispatch(setSignUpError(''));\r\n  }, []);\r\n  const onInputUpdate = (key, value) => {\r\n    setForm({\r\n      ...form,\r\n      [key]: value\r\n    });\r\n  };\r\n  const onSignInClick = () => {\r\n    enqueueSnackbar('Attempting to sign in...', {variant: 'info'});\r\n    dispatch(signInRequest(form));\r\n  }\r\n  return (\r\n    <Box p={5}>\r\n      <Grid container justify={'center'}>\r\n        <Card>\r\n          <CardContent>\r\n            <Typography color={'primary'} component={'h3'} gutterBottom={true} align={'center'} variant={'h3'}>Sign In</Typography>\r\n            {loginError && <Alert color={'error'} severity={'error'}>Invalid Credentials</Alert>}\r\n            <TextField\r\n              label={'Email'}\r\n              variant={'outlined'}\r\n              margin={\"normal\"}\r\n              size={'medium'}\r\n              type={'email'}\r\n              fullWidth={true}\r\n              value={form.email}\r\n              onChange={(event) => onInputUpdate('email', event.target.value)}\r\n              name={'email'}\r\n              placeholder={'Your email...'}/>\r\n            <TextField\r\n              label={'Password'}\r\n              variant={'outlined'}\r\n              margin={\"normal\"}\r\n              size={'medium'}\r\n              type={'password'}\r\n              fullWidth={true}\r\n              value={form.password}\r\n              onChange={(event) => onInputUpdate('password', event.target.value)}\r\n              name={'password'}\r\n              placeholder={'Your password...'}/>\r\n            <Typography gutterBottom={true} variant={'subtitle1'}>\r\n              Don't have an account?\r\n              <Link to={'/sign-up'}>\r\n                <Button color={'primary'} size={'small'} variant={'text'}>\r\n                  Create one\r\n                </Button>\r\n              </Link>\r\n              </Typography>\r\n            <Grid container justify={'center'}>\r\n              <Button disabled={form.email === '' || form.password === '' || isLoading} onClick={onSignInClick} variant={'contained'} size={'large'} color={'primary'}>\r\n                {isLoading && <CircularProgress style={{marginRight: 5}} />}\r\n                Sign In\r\n              </Button>\r\n            </Grid>\r\n          </CardContent>\r\n        </Card>\r\n      </Grid>\r\n    </Box>\r\n  )\r\n}\r\nexport default withSnackbar(SignInPage);\r\n","import React, {useEffect, useState} from \"react\";\r\nimport {\r\n  Box,\r\n  Button,\r\n  Card,\r\n  CardContent, Checkbox,\r\n  CircularProgress, Dialog, DialogActions, DialogContent, DialogTitle,\r\n  FormControlLabel,\r\n  Grid,\r\n  TextField,\r\n  Typography\r\n} from \"@material-ui/core\";\r\nimport {withSnackbar} from \"notistack\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {Link} from \"react-router-dom\";\r\nimport {setSignInError, setSignUpError, signUpRequest} from \"../../redux/actions\";\r\nimport {Alert} from \"@material-ui/lab\";\r\n\r\nconst SignUpPage = ({enqueueSnackbar}) => {\r\n  const dispatch = useDispatch();\r\n  const {signUpError} = useSelector(state => state.auth);\r\n  const {isLoading} = useSelector(state => state.loading);\r\n  const [form, setForm] = useState({\r\n    firstname: '',\r\n    lastname: '',\r\n    email: '',\r\n    password: '',\r\n    confirmPassword: ''\r\n  });\r\n  const [terms, setTerms] = useState(false);\r\n  const [dialog, setDialog] = useState(false);\r\n  useEffect(() => {\r\n    dispatch(setSignInError(''));\r\n    dispatch(setSignUpError(''));\r\n  }, []);\r\n  const onInputUpdate = (key, value) => {\r\n    setForm({\r\n      ...form,\r\n      [key]: value\r\n    });\r\n  };\r\n  const onSignUpClick = () => {\r\n    enqueueSnackbar('Creating your account...', {variant: 'info'});\r\n    dispatch(signUpRequest(form));\r\n  }\r\n  return (\r\n    <Box p={5}>\r\n      <Grid container justify={'center'}>\r\n        <Card>\r\n          <CardContent>\r\n            <Typography color={'primary'} component={'h3'} gutterBottom={true} align={'center'} variant={'h3'}>Create a new account</Typography>\r\n            {signUpError && <Alert color={'error'} severity={'error'}>{signUpError}</Alert>}\r\n            <TextField\r\n              label={'First Name'}\r\n              variant={'outlined'}\r\n              margin={\"normal\"}\r\n              size={'medium'}\r\n              type={'text'}\r\n              fullWidth={true}\r\n              value={form.firstname}\r\n              onChange={(event) => onInputUpdate('firstname', event.target.value)}\r\n              name={'firstname'}\r\n              placeholder={'Your first name...'}/>\r\n            <TextField\r\n              label={'Last Name'}\r\n              variant={'outlined'}\r\n              margin={\"normal\"}\r\n              size={'medium'}\r\n              type={'text'}\r\n              fullWidth={true}\r\n              value={form.lastname}\r\n              onChange={(event) => onInputUpdate('lastname', event.target.value)}\r\n              name={'lastname'}\r\n              placeholder={'Your last name...'}/>\r\n            <TextField\r\n              label={'Email'}\r\n              variant={'outlined'}\r\n              margin={\"normal\"}\r\n              size={'medium'}\r\n              type={'email'}\r\n              fullWidth={true}\r\n              value={form.email}\r\n              onChange={(event) => onInputUpdate('email', event.target.value)}\r\n              name={'email'}\r\n              placeholder={'Your email...'}/>\r\n            <TextField\r\n              label={'Password'}\r\n              variant={'outlined'}\r\n              margin={\"normal\"}\r\n              size={'medium'}\r\n              type={'password'}\r\n              fullWidth={true}\r\n              value={form.password}\r\n              onChange={(event) => onInputUpdate('password', event.target.value)}\r\n              name={'password'}\r\n              placeholder={'Your password...'}/>\r\n            <TextField\r\n              label={'Confirm Password'}\r\n              variant={'outlined'}\r\n              margin={\"normal\"}\r\n              size={'medium'}\r\n              type={'password'}\r\n              fullWidth={true}\r\n              value={form.confirmPassword}\r\n              onChange={(event) => onInputUpdate('confirmPassword', event.target.value)}\r\n              name={'confirmPassword'}\r\n              placeholder={'Confirm your password...'}/>\r\n              <Grid container alignItems={'center'}>\r\n                <Checkbox\r\n                  checked={terms}\r\n                  onChange={() => setTerms(!terms)}\r\n                  name=\"terms\"\r\n                  color=\"primary\"\r\n                />\r\n                <Typography>\r\n                  By checking this, I agree on\r\n                </Typography>\r\n                <Button size={'small'} onClick={() => setDialog(true)} color={\"primary\"} variant={\"text\"}>\r\n                  Terms &  Conditions.\r\n                </Button>\r\n              </Grid>\r\n            <Dialog onClose={() => setDialog(false)} aria-labelledby=\"customized-dialog-title\" open={dialog}>\r\n              <DialogTitle id=\"customized-dialog-title\" onClose={() => setDialog(false)}>\r\n                Terms and Conditions\r\n              </DialogTitle>\r\n              <DialogContent dividers>\r\n                <Typography gutterBottom>\r\n                  Cras mattis consectetur purus sit amet fermentum. Cras justo odio, dapibus ac facilisis\r\n                  in, egestas eget quam. Morbi leo risus, porta ac consectetur ac, vestibulum at eros.\r\n                </Typography>\r\n              </DialogContent>\r\n              <DialogActions>\r\n                <Button autoFocus variant={\"contained\"} onClick={() => setDialog(false)} color=\"primary\">\r\n                  Close\r\n                </Button>\r\n              </DialogActions>\r\n            </Dialog>\r\n            <Typography gutterBottom={true} variant={'subtitle1'}>\r\n              Already have an account?\r\n              <Link to={'/sign-in'}>\r\n                <Button color={'primary'} size={'small'} variant={'text'}>\r\n                  Sign In\r\n                </Button>\r\n              </Link>\r\n            </Typography>\r\n            <Grid container justify={'center'}>\r\n              <Button disabled={form.email === '' || form.password !== form.confirmPassword || form.firstname === '' || form.lastname === '' || form.confirmPassword === '' || form.password === '' || isLoading || !terms} onClick={onSignUpClick} variant={'contained'} size={'large'} color={'primary'}>\r\n                {isLoading && <CircularProgress style={{marginRight: 5}} />}\r\n                Sign Up\r\n              </Button>\r\n            </Grid>\r\n          </CardContent>\r\n        </Card>\r\n      </Grid>\r\n    </Box>\r\n  )\r\n}\r\nexport default withSnackbar(SignUpPage);\r\n","import React from \"react\";\r\nconst ForgetPasswordPage = () => {\r\n  return (\r\n    <h1>Forget Password Page</h1>\r\n  )\r\n}\r\nexport default ForgetPasswordPage;\r\n","import React from \"react\";\r\nconst ResetPasswordPage = () => {\r\n  return (\r\n    <h1>Reset Password Page</h1>\r\n  )\r\n}\r\nexport default ResetPasswordPage;\r\n","import React from \"react\";\r\nconst VerifyEmailPage = () => {\r\n  return (\r\n    <h1>Verify Email Page</h1>\r\n  )\r\n}\r\nexport default VerifyEmailPage;\r\n","import React from \"react\";\r\nconst VerifyCodePage = () => {\r\n  return (\r\n    <h1>Verify Code Page</h1>\r\n  )\r\n}\r\nexport default VerifyCodePage;\r\n","import React from \"react\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {Route, Redirect} from \"react-router-dom\";\r\nimport PropTypes from 'prop-types';\r\nconst GuestRoute = ({path, component: Component, ...rest}) => {\r\n  let {isLoggedIn} = useSelector(state => state.user);\r\n    return <Route path={path} {...rest} render={() => {\r\n      return !isLoggedIn ?\r\n        <Component /> :\r\n        <Redirect to={'/'} />\r\n    }} />\r\n}\r\nGuestRoute.prototype = {\r\n  path: PropTypes.string.isRequired,\r\n  component: PropTypes.func.isRequired,\r\n}\r\nexport default GuestRoute;\r\n","import React, {useEffect, useState} from \"react\";\r\nimport {\r\n  Box, Button,\r\n  Grid, Typography,\r\n} from \"@material-ui/core\";\r\nimport {getAllPollsRequest} from \"../../redux/actions\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport PollCard from \"../../components/polls/PollCard\";\r\nimport Filter from \"../../components/polls/Filter\";\r\nimport Loader from \"../../components/common/Loader\";\r\nimport MyFab from \"../../components/common/MyFab\";\r\nimport {withSnackbar} from \"notistack\";\r\nimport {Link} from \"react-router-dom\";\r\nimport {Result} from \"antd\";\r\n\r\nconst HomePage = ({enqueueSnackbar}) => {\r\n  const dispatch = useDispatch();\r\n  const {filteredPolls, polls} = useSelector(state => state.polls);\r\n  const {isLoading} = useSelector(state => state.loading);\r\n  useEffect(() => {\r\n    enqueueSnackbar('Fetching polls...', {variant: 'info'});\r\n    dispatch(getAllPollsRequest());\r\n  }, []);\r\n  if (isLoading) {\r\n    return (\r\n      <Loader/>\r\n    )\r\n  }\r\n  return (\r\n    <Box p={5}>\r\n      <Filter />\r\n      <MyFab to={'/polls/add'}/>\r\n      <Grid container alignItems={'center'} justify={'center'} spacing={2}>\r\n        {filteredPolls.map((poll) => <PollCard poll={poll} key={poll._id} />)}\r\n        {polls.length === 0 ?\r\n          <Result\r\n            status=\"500\"\r\n            title={<Typography align={'center'} variant={'h5'} gutterBottom={true}>Oops!</Typography>}\r\n            subTitle={<Typography align={'center'} variant={'h6'} gutterBottom={true}>No polls in the database yet...</Typography>}\r\n            extra={<Link to={'/polls/add'}>\r\n              <Grid container justify={'center'}>\r\n                <Button color={\"primary\"} variant={'contained'}>Create the first one?</Button>\r\n              </Grid>\r\n            </Link>}\r\n          />\r\n        :\r\n        filteredPolls.length === 0 && <Typography variant={'subtitle1'}>No polls under this category</Typography>\r\n        }\r\n      </Grid>\r\n    </Box>\r\n  )\r\n}\r\nexport default withSnackbar(HomePage);\r\n","import React from \"react\";\nimport {BrowserRouter, Switch, Route} from \"react-router-dom\";\nimport Header from \"./components/common/Header\";\nimport {Container} from \"@material-ui/core\";\nimport Error404Page from \"./pages/Error404Page\";\nimport UserProfilePage from \"./pages/account/UserProfilePage\";\nimport PollDetailsPage from \"./pages/polls/PollDetailsPage\";\nimport CreatePollPage from \"./pages/polls/CreatePollPage\";\nimport LeaderboardPage from \"./pages/LeaderboardPage\";\nimport PrivateRoute from \"./components/common/PrivateRoute\";\nimport MyProfilePage from \"./pages/account/MyProfilePage\";\nimport AccountSettingsPage from \"./pages/account/AccountSettingsPage\";\nimport MyPollsPage from \"./pages/polls/MyPollsPage\";\nimport SignInPage from \"./pages/auth/SignInPage\";\nimport SignUpPage from \"./pages/auth/SignUpPage\";\nimport ForgetPasswordPage from \"./pages/auth/ForgetPasswordPage\";\nimport ResetPasswordPage from \"./pages/auth/ResetPasswordPage\";\nimport VerifyEmailPage from \"./pages/auth/VerifyEmailPage\";\nimport VerifyCodePage from \"./pages/auth/VerifyCodePage\";\nimport GuestRoute from \"./components/common/GuestRoute\";\nimport HomePage from \"./pages/polls/HomePage\";\n\nfunction App() {\n  return (\n      <BrowserRouter>\n        <Header />\n        <Container>\n          <Switch>\n            <Route exact path={'/'} component={HomePage}/>\n            <PrivateRoute path={'/profile'} component={MyProfilePage}/>\n            <PrivateRoute path={'/settings'} component={AccountSettingsPage}/>\n            <PrivateRoute path={'/my-polls'} component={MyPollsPage}/>\n            <GuestRoute path={'/sign-in'} component={SignInPage}/>\n            <GuestRoute path={'/sign-up'} component={SignUpPage}/>\n            <GuestRoute path={'/forget-password'} component={ForgetPasswordPage}/>\n            <GuestRoute path={'/reset-password'} component={ResetPasswordPage}/>\n            <GuestRoute path={'/verify-email'} component={VerifyEmailPage}/>\n            <GuestRoute path={'/verify-code'} component={VerifyCodePage}/>\n            <Route path={'/user/:userId'} component={UserProfilePage}/>\n            <Route path={'/polls/add'} component={CreatePollPage}/>\n            <Route path={'/polls/:pollId'} component={PollDetailsPage}/>\n            <Route path={'/leaderboard'} component={LeaderboardPage}/>\n            <Route component={Error404Page}/>\n          </Switch>\n        </Container>\n      </BrowserRouter>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {LOGOUT, SAVE_INFO_RESPONSE, SET_LOADING_STATE, SIGNIN_RESPONSE, UPLOAD_IMAGE_RESPONSE} from \"../types\";\r\nimport {merge} from 'lodash';\r\n\r\nconst INITIAL_STATE = {\r\n  isLoggedIn: false,\r\n  profile: {\r\n    firstname: '',\r\n    lastname: '',\r\n    email: '',\r\n    profilePicture: '',\r\n    _id: '',\r\n    createdPolls: [],\r\n    answeredPolls: [],\r\n    score: 0\r\n  },\r\n  savingImage: false,\r\n  savingInfo: false,\r\n  savingPassword: false,\r\n  token: ''\r\n};\r\nexport default function userReducer(state = INITIAL_STATE, action) {\r\n  const {type, payload, error} = action;\r\n  let newState = {};\r\n  switch(type) {\r\n    case SET_LOADING_STATE:\r\n      newState = merge({}, state);\r\n      newState[payload.key] = payload.value;\r\n      return newState;\r\n    case SAVE_INFO_RESPONSE:\r\n      newState = merge({}, state);\r\n      newState.profile = {\r\n        ...state.profile,\r\n        ...payload.info\r\n      };\r\n      return newState\r\n    case UPLOAD_IMAGE_RESPONSE:\r\n      newState = merge({}, state);\r\n      newState.profile.profilePicture = payload.profilePictureUrl;\r\n\r\n      return newState\r\n    case SIGNIN_RESPONSE:\r\n      newState = merge({}, state);\r\n      newState.isLoggedIn = true;\r\n      newState.token = payload.userData.token;\r\n      newState.profile = payload.userData.profile;\r\n      return newState\r\n    case LOGOUT:\r\n      newState = merge({}, INITIAL_STATE);\r\n      return newState;\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","const filterPollsBy = (polls, filterBy, userId) => {\r\n  let filteredPolls;\r\n  switch (filterBy) {\r\n    case 'latest':\r\n      filteredPolls = polls.sort((a, b) => b.createdAt - a.createdAt);\r\n      break;\r\n    case 'top':\r\n      filteredPolls = polls.sort((a, b) => b.totalAnswersCount - a.totalAnswersCount);\r\n      break;\r\n    case 'answered':\r\n      if (userId === '') {\r\n        filteredPolls = polls.filter((poll) => poll.answeredBy.length !== 0);\r\n      } else {\r\n        filteredPolls = polls.filter((poll) => poll.answeredBy.indexOf(userId) !== -1);\r\n      }\r\n      break;\r\n    case 'unanswered':\r\n      if (userId === '') {\r\n        filteredPolls = polls.filter((poll) => poll.answeredBy.length === 0);\r\n      } else {\r\n        filteredPolls = polls.filter((poll) => poll.answeredBy.indexOf(userId) === -1);\r\n      }\r\n      break;\r\n    default:\r\n      filteredPolls = [...polls];\r\n  }\r\n  return filteredPolls;\r\n};\r\n\r\nconst formatAuthorizationHeaders = token => {\r\n  return {'Authorization': `Bearer ${token}`};\r\n}\r\nexport {\r\n  filterPollsBy,\r\n  formatAuthorizationHeaders,\r\n}\r\n","import {\r\n  ANSWER_POLL_RESPONSE,\r\n  CLEAR_POLL_DATA,\r\n  CLEAR_POLL_INPUTS, CREATE_POLL_RESPONSE, FILTER_POLLS,\r\n  GET_ALL_POLLS_RESPONSE, GET_LEADERBOARD_RESPONSE, GET_MY_POLLS_RESPONSE,\r\n  GET_POLL_RESPONSE,\r\n  UPDATE_POLL_INPUT\r\n} from \"../types\";\r\nimport {filterPollsBy} from \"../../helpers/functions\";\r\n\r\nconst INITIAL_STATE = {\r\n  pollData: {},\r\n  polls: [],\r\n  newPollData: {\r\n    title: '',\r\n    option1: '',\r\n    option2: ''\r\n  },\r\n  filteredPolls: [],\r\n  myPolls: [],\r\n  filterBy: \"unanswered\",\r\n  leaderboard: []\r\n}\r\n\r\nexport default function pollsReducer(state = INITIAL_STATE, action) {\r\n  const {type, payload, error} = action;\r\n  let filteredPolls;\r\n  switch (type) {\r\n    case GET_POLL_RESPONSE:\r\n      return {\r\n        ...state,\r\n        pollData: {...payload.pollData}\r\n      };\r\n    case GET_LEADERBOARD_RESPONSE:\r\n      return {\r\n        ...state,\r\n        leaderboard: [...payload.leaderboard]\r\n      };\r\n    case CREATE_POLL_RESPONSE:\r\n      return {\r\n        ...state,\r\n        polls: state.polls.concat([payload.poll])\r\n      };\r\n    case GET_MY_POLLS_RESPONSE:\r\n      return {\r\n        ...state,\r\n        myPolls: [...payload.polls],\r\n      };\r\n    case GET_ALL_POLLS_RESPONSE:\r\n      filteredPolls = filterPollsBy(payload.polls, 'unanswered');\r\n      return {\r\n        ...state,\r\n        polls: [...payload.polls],\r\n        filteredPolls: [...payload.polls],\r\n      };\r\n    case FILTER_POLLS:\r\n      let {filterBy, userId} = payload;\r\n      filteredPolls = filterPollsBy(state.polls, filterBy, userId);\r\n      return {\r\n        ...state,\r\n        filterBy,\r\n        filteredPolls: [...filteredPolls]\r\n      }\r\n    case CLEAR_POLL_DATA:\r\n      return {\r\n        ...state,\r\n        pollData: {...INITIAL_STATE.pollData}\r\n      };\r\n    case UPDATE_POLL_INPUT:\r\n      return {\r\n        ...state,\r\n        newPollData: {\r\n          ...state.newPollData,\r\n          [payload.key]: payload.value\r\n        }\r\n      };\r\n    case CLEAR_POLL_INPUTS:\r\n      return {\r\n        ...state,\r\n        newPollData: {\r\n          ...INITIAL_STATE.newPollData\r\n        }\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import {SET_LOADING} from \"../types\";\r\n\r\nconst INITIAL_STATE = {\r\n  isLoading: false\r\n}\r\n\r\nexport default function loadingReducer(state = INITIAL_STATE, {type, payload}) {\r\n  switch (type) {\r\n    case SET_LOADING:\r\n      return {\r\n        isLoading: payload.isLoading\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import {SIGNIN_ERROR, SIGNUP_ERROR} from \"../types\";\r\n\r\nconst INITIAL_STATE = {\r\n  login: {\r\n    email: '',\r\n    password: ''\r\n  },\r\n  signup: {\r\n    email: '',\r\n    password: '',\r\n    firstname: '',\r\n    lastname: '',\r\n  },\r\n  signInError: '',\r\n  signUpError: '',\r\n}\r\nexport default function authReducer(state = INITIAL_STATE, action) {\r\n  const {type, payload, error} = action;\r\n  switch(type) {\r\n    case SIGNIN_ERROR:\r\n      return {\r\n        ...state,\r\n        signInError: error\r\n      };\r\n    case SIGNUP_ERROR:\r\n      return {\r\n        ...state,\r\n        signUpError: error,\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import {combineReducers} from \"redux\";\r\nimport user from './user';\r\nimport polls from './polls';\r\nimport loading from './loading';\r\nimport auth from './auth';\r\nconst rootReducer = combineReducers({user, polls, loading, auth});\r\nexport default rootReducer;\r\n","\r\nconst getToken = state => state.user.token;\r\nexport {getToken}\r\n","import axios from 'axios';\r\nimport {API_URL} from \"../config/constants\";\r\nexport default function API(route, method, data, headers) {\r\n  return axios({\r\n    method,\r\n    url: `${API_URL}/${route}`,\r\n    headers,\r\n    data\r\n  });\r\n}\r\n","const API_URL = '';\r\nexport {\r\n  API_URL\r\n}\r\n","import {\r\n  clearPollInputs,\r\n  createPollResponse,\r\n  getAllPollsResponse, getLeaderboardResponse,\r\n  getMyPollsResponse, getPollRequest,\r\n  getPollResponse,\r\n  setLoading\r\n} from \"../actions\";\r\nimport {call, put, select, takeLatest} from 'redux-saga/effects';\r\nimport {\r\n  ANSWER_POLL_REQUEST,\r\n  CREATE_POLL_REQUEST,\r\n  GET_ALL_POLLS_REQUEST, GET_LEADERBOARD_REQUEST,\r\n  GET_MY_POLLS_REQUEST,\r\n  GET_POLL_REQUEST\r\n} from \"../types\";\r\nimport {getToken} from \"../selectors\";\r\nimport API from \"../../api\";\r\nimport {formatAuthorizationHeaders} from \"../../helpers/functions\";\r\n\r\nfunction* createPoll() {\r\n  yield put(setLoading(true));\r\n  try {\r\n    const token = yield select(getToken);\r\n    const {newPollData} = yield select(state => state.polls);\r\n    const response = yield call(API,'polls', 'post', newPollData, formatAuthorizationHeaders(token));\r\n    yield put(createPollResponse(response.data));\r\n    yield put(clearPollInputs());\r\n    yield put(setLoading(false));\r\n  } catch (e) {\r\n    console.error(e);\r\n  }\r\n}\r\n\r\nfunction* answerPoll({payload}) {\r\n  yield put(setLoading(true));\r\n  try {\r\n    const token = yield select(getToken);\r\n    const response = yield call(API,'polls/answer', 'post', payload, formatAuthorizationHeaders(token));\r\n    yield put(getPollResponse(response.data));\r\n    yield put(clearPollInputs());\r\n    yield put(getPollRequest(payload.pollId));\r\n  } catch (e) {\r\n    console.error(e);\r\n  }\r\n}\r\n\r\nfunction* getAllPolls() {\r\n  yield put(setLoading(true));\r\n  try {\r\n    const response = yield call(API,'polls', 'get');\r\n    yield put(getAllPollsResponse(response.data));\r\n    yield put(setLoading(false));\r\n  } catch (e) {\r\n    console.error(e);\r\n  }\r\n}\r\n\r\nfunction* getMyPolls() {\r\n  yield put(setLoading(true));\r\n  try {\r\n    const token = yield select(getToken);\r\n    const response = yield call(API,'polls/my-polls', 'get', {}, formatAuthorizationHeaders(token));\r\n    yield put(getMyPollsResponse(response.data));\r\n    yield put(setLoading(false));\r\n  } catch (e) {\r\n    console.error(e);\r\n  }\r\n}\r\nfunction* getLeaderboard() {\r\n  yield put(setLoading(true));\r\n  try {\r\n    const response = yield call(API,'polls/leaderboard', 'get', {});\r\n    yield put(getLeaderboardResponse(response.data));\r\n    yield put(setLoading(false));\r\n  } catch (e) {\r\n    console.error(e);\r\n  }\r\n}\r\nfunction* getPollDetails(action) {\r\n  yield put(setLoading(true));\r\n  try {\r\n    const token = yield select(getToken);\r\n    const response = yield call(API,`polls/${action.payload.pollId}`, 'get', {}, formatAuthorizationHeaders(token));\r\n    yield put(getPollResponse(response.data));\r\n    yield put(setLoading(false));\r\n  } catch (e) {\r\n    console.error(e);\r\n  }\r\n}\r\n\r\nfunction* getPollDetailsWatcher() {\r\n  yield takeLatest(GET_POLL_REQUEST, getPollDetails);\r\n}\r\n\r\nfunction* createPollWatcher() {\r\n  yield takeLatest(CREATE_POLL_REQUEST, createPoll);\r\n}\r\n\r\nfunction* answerPollWatcher() {\r\n  yield takeLatest(ANSWER_POLL_REQUEST, answerPoll);\r\n}\r\n\r\nfunction* getAllPollsWatcher() {\r\n  yield takeLatest(GET_ALL_POLLS_REQUEST, getAllPolls);\r\n}\r\n\r\nfunction* getMyPollsWatcher() {\r\n  yield takeLatest(GET_MY_POLLS_REQUEST, getMyPolls);\r\n}\r\nfunction* getLeaderboardWatcher() {\r\n  yield takeLatest(GET_LEADERBOARD_REQUEST, getLeaderboard);\r\n}\r\n\r\nexport {\r\n  createPollWatcher,\r\n  getAllPollsWatcher,\r\n  getMyPollsWatcher,\r\n  getPollDetailsWatcher,\r\n  answerPollWatcher,\r\n  getLeaderboardWatcher\r\n}\r\n","import {call, put, select, delay, takeLatest} from \"redux-saga/effects\";\r\nimport {getToken} from \"../selectors\";\r\nimport API from \"../../api\";\r\nimport {formatAuthorizationHeaders} from \"../../helpers/functions\";\r\nimport {CHANGE_PASSWORD_REQUEST, SAVE_INFO_REQUEST, UPLOAD_IMAGE_REQUEST} from \"../types\";\r\nimport {saveInfoResponse, setLoadingState, uploadImageResponse} from \"../actions/user\";\r\n\r\nfunction* updateUserInfo({payload}) {\r\n  yield put(setLoadingState('savingInfo', true));\r\n  try {\r\n    const token = yield select(getToken);\r\n    yield call(API,`users/`, 'put', payload.info, formatAuthorizationHeaders(token));\r\n    yield put(saveInfoResponse({...payload.info}));\r\n    yield put(setLoadingState('savingInfo', false));\r\n  } catch (e) {\r\n    console.error(e);\r\n  }\r\n}\r\n\r\nfunction* updateUserImage({payload}) {\r\n  yield put(setLoadingState('savingImage', true));\r\n  try {\r\n    const token = yield select(getToken);\r\n    const formData = new FormData();\r\n    formData.append('image', payload.imageData);\r\n    const response = yield call(API,`users/upload-image`, 'post', formData, {\r\n      ...formatAuthorizationHeaders(token),\r\n      'Content-Type': 'multipart/form-data'\r\n    });\r\n    yield put(uploadImageResponse(response.data));\r\n    yield put(setLoadingState('savingImage', false));\r\n  } catch (e) {\r\n    console.error(e);\r\n  }\r\n}\r\n\r\nfunction* changePassword({payload}) {\r\n  yield put(setLoadingState('savingPassword', true));\r\n  try {\r\n    const token = yield select(getToken);\r\n    yield call(API,`users/change-password`, 'put', {password: payload.password}, formatAuthorizationHeaders(token));\r\n    yield put(setLoadingState('savingPassword', false));\r\n  } catch (e) {\r\n    console.error(e);\r\n  }\r\n}\r\n\r\nfunction* updateUserImageWatcher() {\r\n  yield takeLatest(UPLOAD_IMAGE_REQUEST, updateUserImage);\r\n}\r\n\r\nfunction* updateUserInfoWatcher() {\r\n  yield takeLatest(SAVE_INFO_REQUEST, updateUserInfo);\r\n}\r\n\r\nfunction* changePasswordWatcher() {\r\n  yield takeLatest(CHANGE_PASSWORD_REQUEST, changePassword);\r\n}\r\n\r\nexport {\r\n  updateUserInfoWatcher,\r\n  changePasswordWatcher,\r\n  updateUserImageWatcher\r\n}\r\n","import {call, put, takeLatest} from \"redux-saga/effects\";\r\nimport {setLoading, setSignInError, setSignUpError, signInResponse} from \"../actions\";\r\nimport API from \"../../api\";\r\nimport {SIGNIN_REQUEST, SIGNUP_REQUEST} from \"../types\";\r\n\r\nfunction* signIn({payload}) {\r\n  yield put(setLoading(true));\r\n  try {\r\n    const response = yield call(API,`users/sign-in`, 'post', payload.loginData);\r\n    if (response.data.error) {\r\n      yield put(setSignInError(response.data.error));\r\n    } else {\r\n      yield put(signInResponse(response.data));\r\n    }    yield put(setLoading(false));\r\n  } catch (e) {\r\n    console.error(e);\r\n  }\r\n}\r\n\r\nfunction* signUp({payload}) {\r\n  yield put(setLoading(true));\r\n  try {\r\n    const response = yield call(API,`users/sign-up`, 'post', payload.signUpData);\r\n    if (response.data.error) {\r\n      yield put(setSignUpError(response.data.error));\r\n    } else {\r\n      yield put(signInResponse(response.data));\r\n    }\r\n    yield put(setLoading(false));\r\n  } catch (e) {\r\n    console.error(e);\r\n  }\r\n}\r\n\r\nfunction* signUpWatcher() {\r\n  yield takeLatest(SIGNUP_REQUEST, signUp);\r\n}\r\n\r\nfunction* signInWatcher() {\r\n  yield takeLatest(SIGNIN_REQUEST, signIn);\r\n}\r\nexport {\r\n  signInWatcher,\r\n  signUpWatcher\r\n}\r\n","import {\r\n  answerPollWatcher,\r\n  createPollWatcher,\r\n  getAllPollsWatcher, getLeaderboardWatcher,\r\n  getMyPollsWatcher,\r\n  getPollDetailsWatcher\r\n} from \"./polls\";\r\nimport { all} from 'redux-saga/effects';\r\nimport {changePasswordWatcher, updateUserImageWatcher, updateUserInfoWatcher} from \"./user\";\r\nimport {signInWatcher, signUpWatcher} from \"./auth\";\r\nfunction* rootSaga() {\r\n  yield all([\r\n    createPollWatcher(),\r\n    getAllPollsWatcher(),\r\n    getMyPollsWatcher(),\r\n    getPollDetailsWatcher(),\r\n    answerPollWatcher(),\r\n    getLeaderboardWatcher(),\r\n    updateUserInfoWatcher(),\r\n    changePasswordWatcher(),\r\n    updateUserImageWatcher(),\r\n    signInWatcher(),\r\n    signUpWatcher()\r\n  ])\r\n}\r\nexport default rootSaga;\r\n","import {applyMiddleware, createStore} from \"redux\";\r\nimport createSagaMiddleware from 'redux-saga';\r\nimport { persistStore, persistReducer } from 'redux-persist'\r\nimport storage from 'redux-persist/lib/storage' // defaults to localStorage for web\r\n\r\nconst persistConfig = {\r\n  key: 'root',\r\n  storage,\r\n}\r\n\r\nimport rootReducer from \"./reducers\";\r\nimport rootSaga from \"./sagas\";\r\nimport {createLogger} from \"redux-logger\";\r\nconst logger = createLogger();\r\nconst sagaMiddleware = createSagaMiddleware();\r\nconst persistedReducer = persistReducer(persistConfig, rootReducer)\r\n\r\nconst store = createStore(persistedReducer, applyMiddleware(sagaMiddleware, logger));\r\nconst persistor = persistStore(store)\r\nsagaMiddleware.run(rootSaga);\r\nexport {store, persistor};\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {Provider} from \"react-redux\";\nimport {ThemeProvider} from \"@material-ui/styles\";\nimport theme from \"./config/theme\";\nimport {SnackbarProvider} from \"notistack\";\nimport {store, persistor} from \"./redux/store\";\nimport { PersistGate } from 'redux-persist/integration/react'\nimport Loader from \"./components/common/Loader\";\nReactDOM.render(\n  // Remove Strict mode to use notifications\n  // <React.StrictMode>\n  //   <App />\n  // </React.StrictMode>\n\n  <Provider store={store}>\n    <PersistGate persistor={persistor} loading={<Loader/>}>\n      <ThemeProvider theme={theme}>\n        <SnackbarProvider maxSnack={3} autoHideDuration={3000} disableWindowBlurListener={true}>\n          <App />\n        </SnackbarProvider>\n      </ThemeProvider>\n    </PersistGate>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}