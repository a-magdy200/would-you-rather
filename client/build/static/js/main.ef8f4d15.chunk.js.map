{"version":3,"sources":["redux/types/auth.js","redux/types/polls.js","redux/types/loading.js","redux/types/user.js","redux/actions/auth.js","redux/actions/polls.js","redux/actions/loading.js","components/common/Header.js","pages/Error404Page.js","pages/account/UserProfilePage.js","config/theme.js","components/polls/PollCard.js","components/polls/Filter.js","components/common/Loader.js","components/polls/UserCard.js","components/polls/AnalysisData.js","components/polls/PollButtons.js","components/common/YouMustLogin.js","components/polls/AnswerDetails.js","components/polls/PollDetailsCard.js","pages/polls/PollDetailsPage.js","pages/polls/CreatePollPage.js","components/polls/LeaderboardCard.js","pages/LeaderboardPage.js","components/common/PrivateRoute.js","components/user/UpdateProfileCard.js","redux/actions/user.js","pages/account/MyProfilePage.js","pages/account/AccountSettingsPage.js","components/common/MyFab.js","pages/polls/MyPollsPage.js","pages/auth/SignInPage.js","pages/auth/SignUpPage.js","pages/auth/ForgetPasswordPage.js","pages/auth/ResetPasswordPage.js","pages/auth/VerifyEmailPage.js","pages/auth/VerifyCodePage.js","components/common/GuestRoute.js","pages/polls/HomePage.js","App.js","reportWebVitals.js","redux/reducers/user.js","helpers/functions.js","redux/reducers/polls.js","redux/reducers/loading.js","redux/reducers/auth.js","redux/reducers/index.js","redux/selectors/common.js","api/index.js","config/constants.js","redux/sagas/polls.js","redux/sagas/user.js","redux/sagas/auth.js","redux/sagas/index.js","redux/store.js","index.js"],"names":["LOGOUT","SIGNUP_REQUEST","SIGNIN_REQUEST","SIGNIN_RESPONSE","SIGNIN_ERROR","SIGNUP_ERROR","CREATE_POLL_REQUEST","CREATE_POLL_RESPONSE","ANSWER_POLL_REQUEST","GET_POLL_REQUEST","GET_POLL_RESPONSE","GET_POLL_ERROR","GET_ALL_POLLS_REQUEST","GET_ALL_POLLS_RESPONSE","GET_MY_POLLS_REQUEST","GET_MY_POLLS_RESPONSE","GET_LEADERBOARD_REQUEST","GET_LEADERBOARD_RESPONSE","FILTER_POLLS","CLEAR_POLL_INPUTS","UPDATE_POLL_INPUT","CLEAR_POLL_DATA","SET_LOADING","SET_LOADING_STATE","UPLOAD_IMAGE_REQUEST","UPLOAD_IMAGE_RESPONSE","SAVE_INFO_REQUEST","SAVE_INFO_RESPONSE","CHANGE_PASSWORD_REQUEST","signInResponse","userData","type","payload","setSignInError","error","setSignUpError","getPollRequest","pollId","getPollResponse","pollData","getPollError","clearPollInputs","setLoading","isLoading","useStyles","makeStyles","theme","root","flexGrow","homeButton","color","iconStyle","marginRight","avatarStyle","border","title","navContainer","flex","Header","classes","history","useHistory","dispatch","useDispatch","useState","anchorEl","setAnchorEl","open","Boolean","useSelector","state","user","isLoggedIn","profile","profilePicture","firstname","lastname","handleClose","to","push","className","AppBar","position","variant","Toolbar","edge","Button","onClick","HomeFilled","size","Grid","container","justify","alignItems","spacing","item","PlusOutlined","ApartmentOutlined","TableOutlined","ml","Avatar","alt","src","IconButton","aria-label","aria-controls","aria-haspopup","event","currentTarget","UserOutlined","Menu","id","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","onClose","authItems","path","text","icon","LoginOutlined","UserAddOutlined","loggedInItems","LogoutOutlined","map","index","MenuItem","renderMenuItems","withSnackbar","enqueueSnackbar","useEffect","snackbars","location","replace","pathname","UserProfilePage","MAIN_COLOR","createMuiTheme","palette","primary","main","secondary","styles","cardHeader","borderBottom","textTransform","backgroundColor","cardContentContainer","userContainer","borderRight","pollDataContainer","buttonContainer","marginTop","display","height","width","PollCard","poll","createdBy","_id","md","lg","xl","sm","xs","Card","CardHeader","CardContent","sizes","Typography","gutterBottom","fullWidth","prototype","PropTypes","string","isRequired","filterContainerStyle","marginBottom","Filter","filterBy","polls","ToggleButtonGroup","value","exclusive","onChange","e","userId","filterPolls","ToggleButton","loadingContainer","top","left","justifyContent","Loader","CircularProgress","userCardContainerStyle","userImageContainerStyle","userNameStyle","badgeStyle","right","borderRadius","userDataContainer","UserCard","isProfile","createdAt","score","CardMedia","image","Chip","label","createdPolls","length","answeredPolls","moment","format","bool","number","AnalysisData","data","totalAnswersCount","option1Count","option2Count","Divider","PollButtons","options","onOptionClick","arrayOf","func","YouMustLogin","Box","AnswerDetails","answerDetails","answer","mb","BorderlessTableOutlined","containerStyle","PollDetailsCard","pollDetails","option1","option2","StarFilled","StarOutlined","pollError","loading","useParams","p","option","answerPollRequest","creatingState","setCreatingState","onInputUpdate","key","updatePollInput","direction","Backdrop","style","zIndex","component","paragraph","TextField","margin","multiline","helperText","target","required","name","placeholder","disabled","LeaderboardCard","LeaderboardPage","leaderboard","PrivateRoute","Component","rest","render","labels","email","newPassword","confirmPassword","UpdateProfileCard","onInfoSave","onPasswordSave","onImageUpload","imagePreview","info","password","onInfoInputUpdate","onPasswordInputUpdate","savingImage","savingInfo","savingPassword","imageRef","useRef","ref","hidden","current","click","m","Object","keys","Validator","isEmail","setLoadingState","loaders","setLoaders","setInfo","setPassword","setImagePreview","saveInfoRequest","changePasswordRequest","newImage","files","reader","FileReader","addEventListener","result","readAsDataURL","imageData","AccountSettingsPage","floatingActionButtonStyle","bottom","MyFab","Fab","MyPollsPage","myPolls","status","align","subTitle","extra","signInError","auth","form","setForm","Alert","severity","loginData","signUpError","terms","setTerms","dialog","setDialog","Checkbox","checked","Dialog","aria-labelledby","DialogTitle","DialogContent","dividers","DialogActions","autoFocus","signUpData","ForgetPasswordPage","ResetPasswordPage","VerifyEmailPage","VerifyCodePage","GuestRoute","filteredPolls","App","Container","exact","HomePage","MyProfilePage","SignInPage","SignUpPage","CreatePollPage","PollDetailsPage","Error404Page","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","INITIAL_STATE","token","filterPollsBy","sort","a","b","filter","answeredBy","indexOf","formatAuthorizationHeaders","newPollData","login","signup","rootReducer","combineReducers","action","newState","merge","profilePictureUrl","concat","getToken","API","route","method","headers","axios","url","createPoll","answerPoll","getAllPolls","getMyPolls","getLeaderboard","getPollDetails","getPollDetailsWatcher","createPollWatcher","answerPollWatcher","getAllPollsWatcher","getMyPollsWatcher","getLeaderboardWatcher","put","select","call","response","console","takeLatest","updateUserInfo","updateUserImage","changePassword","updateUserImageWatcher","updateUserInfoWatcher","changePasswordWatcher","formData","FormData","append","signIn","signUp","signUpWatcher","signInWatcher","rootSaga","all","persistConfig","storage","logger","createLogger","sagaMiddleware","createSagaMiddleware","persistedReducer","persistReducer","store","createStore","applyMiddleware","persistor","persistStore","run","ReactDOM","ThemeProvider","maxSnack","autoHideDuration","disableWindowBlurListener","document","getElementById"],"mappings":"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","file":"static/js/main.ef8f4d15.chunk.js","sourcesContent":["const LOGOUT = 'LOGOUT';\nconst SIGNUP_REQUEST = 'SIGNUP_REQUEST';\nconst SIGNIN_REQUEST = 'SIGNIN_REQUEST';\nconst SIGNIN_RESPONSE = 'SIGNIN_RESPONSE';\nconst SIGNIN_ERROR = 'SIGNIN_ERROR';\nconst SIGNUP_ERROR = 'SIGNUP_ERROR';\nexport {\n  LOGOUT,\n  SIGNIN_REQUEST,\n  SIGNIN_RESPONSE,\n  SIGNUP_REQUEST,\n  SIGNIN_ERROR,\n  SIGNUP_ERROR,\n}\n","const CREATE_POLL_REQUEST = 'CREATE_POLL_REQUEST';\nconst CREATE_POLL_RESPONSE = 'CREATE_POLL_RESPONSE';\nconst ANSWER_POLL_REQUEST = 'ANSWER_POLL_REQUEST';\nconst GET_POLL_REQUEST = 'GET_POLL_REQUEST';\nconst GET_POLL_RESPONSE = 'GET_POLL_RESPONSE';\nconst GET_POLL_ERROR = 'GET_POLL_ERROR';\nconst GET_ALL_POLLS_REQUEST = 'GET_ALL_POLLS_REQUEST';\nconst GET_ALL_POLLS_RESPONSE = 'GET_ALL_POLLS_RESPONSE';\nconst GET_MY_POLLS_REQUEST = 'GET_MY_POLLS_REQUEST';\nconst GET_MY_POLLS_RESPONSE = 'GET_MY_POLLS_RESPONSE';\nconst GET_LEADERBOARD_REQUEST = 'GET_LEADERBOARD_REQUEST';\nconst GET_LEADERBOARD_RESPONSE = 'GET_LEADERBOARD_RESPONSE';\nconst FILTER_POLLS = 'FILTER_POLLS';\nconst CLEAR_POLL_INPUTS = 'CLEAR_POLL_INPUTS';\nconst UPDATE_POLL_INPUT = 'UPDATE_POLL_INPUT';\nconst CLEAR_POLL_DATA = 'CLEAR_POLL_DATA';\n\nexport {\n  CLEAR_POLL_DATA,\n  CLEAR_POLL_INPUTS,\n  UPDATE_POLL_INPUT,\n  ANSWER_POLL_REQUEST,\n  CREATE_POLL_REQUEST,\n  CREATE_POLL_RESPONSE,\n  GET_MY_POLLS_REQUEST,\n  GET_MY_POLLS_RESPONSE,\n  GET_LEADERBOARD_REQUEST,\n  GET_LEADERBOARD_RESPONSE,\n  GET_ALL_POLLS_REQUEST,\n  GET_ALL_POLLS_RESPONSE,\n  GET_POLL_REQUEST,\n  GET_POLL_ERROR,\n  GET_POLL_RESPONSE,\n  FILTER_POLLS,\n}\n\n","const SET_LOADING = 'SET_LOADING';\nexport {\n  SET_LOADING,\n}\n","const SET_LOADING_STATE = 'SET_LOADING_STATE';\nconst UPLOAD_IMAGE_REQUEST = 'UPLOAD_IMAGE_REQUEST';\nconst UPLOAD_IMAGE_RESPONSE = 'UPLOAD_IMAGE_RESPONSE';\nconst SAVE_INFO_REQUEST = 'SAVE_INFO_REQUEST';\nconst SAVE_INFO_RESPONSE = 'SAVE_INFO_RESPONSE';\nconst CHANGE_PASSWORD_REQUEST = 'CHANGE_PASSWORD_REQUEST';\nconst CHANGE_PASSWORD_RESPONSE = 'CHANGE_PASSWORD_RESPONSE';\nexport {\n  CHANGE_PASSWORD_REQUEST,\n  CHANGE_PASSWORD_RESPONSE,\n  SAVE_INFO_REQUEST,\n  SAVE_INFO_RESPONSE,\n  SET_LOADING_STATE,\n  UPLOAD_IMAGE_REQUEST,\n  UPLOAD_IMAGE_RESPONSE\n}\n","import {LOGOUT, SIGNIN_ERROR, SIGNIN_REQUEST, SIGNIN_RESPONSE, SIGNUP_ERROR, SIGNUP_REQUEST} from \"../types\";\nconst signInRequest = (loginData) => ({\n  type: SIGNIN_REQUEST,\n  payload: {loginData}\n})\nconst signInResponse = (userData) => ({\n  type: SIGNIN_RESPONSE,\n  payload: {userData}\n})\nconst signUpRequest = (signUpData) => ({\n  type: SIGNUP_REQUEST,\n  payload: {signUpData}\n});\nconst setSignInError = (error) => ({\n  type: SIGNIN_ERROR,\n  error\n})\nconst setSignUpError = (error) => ({\n  type: SIGNUP_ERROR,\n  error\n})\nconst logout = () => ({\n  type: LOGOUT\n});\nexport {\n  logout,\n  signInRequest,\n  signInResponse,\n  signUpRequest,\n  setSignInError,\n  setSignUpError,\n}\n","import {\n  CREATE_POLL_REQUEST,\n  CREATE_POLL_RESPONSE,\n  ANSWER_POLL_REQUEST,\n  GET_POLL_REQUEST,\n  GET_POLL_RESPONSE,\n  GET_ALL_POLLS_REQUEST,\n  GET_ALL_POLLS_RESPONSE,\n  FILTER_POLLS,\n  UPDATE_POLL_INPUT,\n  CLEAR_POLL_INPUTS,\n  GET_MY_POLLS_RESPONSE,\n  GET_MY_POLLS_REQUEST, GET_LEADERBOARD_REQUEST, GET_LEADERBOARD_RESPONSE, GET_POLL_ERROR,\n} from '../types';\n\n\nconst createPollRequest = () => ({\n  type: CREATE_POLL_REQUEST\n});\nconst createPollResponse = (poll) => ({\n  type: CREATE_POLL_RESPONSE,\n  payload: {poll}\n})\nconst answerPollRequest = (pollId, answer) => ({\n  type: ANSWER_POLL_REQUEST,\n  payload: {pollId, answer}\n});\nconst getPollRequest = (pollId) => ({\n  type: GET_POLL_REQUEST,\n  payload: {pollId}\n});\nconst getPollResponse = (pollData) => ({\n  type: GET_POLL_RESPONSE,\n  payload: {pollData}\n})\nconst getPollError = (error) => ({\n  type: GET_POLL_ERROR,\n  error\n})\nconst getAllPollsRequest = () => ({\n  type: GET_ALL_POLLS_REQUEST\n});\nconst getAllPollsResponse = (polls) => ({\n  type: GET_ALL_POLLS_RESPONSE,\n  payload: {polls}\n})\nconst getMyPollsRequest = () => ({\n  type: GET_MY_POLLS_REQUEST\n});\nconst getMyPollsResponse = (polls) => ({\n  type: GET_MY_POLLS_RESPONSE,\n  payload: {polls}\n})\nconst getLeaderboardRequest = () => ({\n  type: GET_LEADERBOARD_REQUEST\n});\nconst getLeaderboardResponse = (leaderboard) => ({\n  type: GET_LEADERBOARD_RESPONSE,\n  payload: {leaderboard}\n})\nconst filterPolls = (filterBy, userId) => ({\n  type: FILTER_POLLS,\n  payload: {filterBy, userId}\n});\nconst updatePollInput = (key, value) => ({\n  type: UPDATE_POLL_INPUT,\n  payload: {key, value}\n});\nconst clearPollInputs = () => ({\n  type: CLEAR_POLL_INPUTS\n});\nexport {\n  updatePollInput,\n  getPollError,\n  clearPollInputs,\n  createPollRequest,\n  createPollResponse,\n  getAllPollsRequest,\n  getAllPollsResponse,\n  getPollRequest,\n  getPollResponse,\n  answerPollRequest,\n  filterPolls,\n  getMyPollsRequest,\n  getMyPollsResponse,\n  getLeaderboardRequest,\n  getLeaderboardResponse\n}\n","import {SET_LOADING} from \"../types\";\n\nconst setLoading = (isLoading) => ({\n  type: SET_LOADING,\n  payload: {isLoading}\n});\nexport {setLoading};\n","import React, {useState} from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Menu from '@material-ui/core/Menu';\nimport {\n  ApartmentOutlined,\n  HomeFilled,\n  LoginOutlined,\n  LogoutOutlined, PlusOutlined,\n  TableOutlined,\n  UserAddOutlined,\n  UserOutlined\n} from \"@ant-design/icons\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {useHistory, Link} from 'react-router-dom';\nimport {logout} from \"../../redux/actions\";\nimport {Avatar, Box, Button, Grid} from \"@material-ui/core\";\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  homeButton: {\n   color: 'white'\n  },\n  iconStyle: {\n    marginRight: 5,\n  },\n  avatarStyle: {\n    marginRight: 5,\n    border: `2px solid white`\n  },\n  title: {\n    flexGrow: 1,\n  },\n  navContainer: {\n    flex: 1\n  }\n}));\nconst Header = () => {\n    const classes = useStyles();\n    const history = useHistory();\n    const dispatch = useDispatch();\n    const [anchorEl, setAnchorEl] = useState(null);\n    const open = Boolean(anchorEl);\n    const {isLoggedIn, profile} = useSelector(state => state.user);\n    const {profilePicture, firstname, lastname} = profile;\n    const handleMenu = (event) => {\n      setAnchorEl(event.currentTarget);\n    };\n\n    const handleClose = (to) => {\n      setAnchorEl(null);\n      if (to === '/logout') {\n        dispatch(logout());\n      } else {\n        history.push(to);\n      }\n    };\n    const renderMenuItems = () => {\n      const authItems = [\n        {path: '/sign-in', text: 'Sign In', icon: <LoginOutlined />},\n        {path: '/sign-up', text: 'Sign Up', icon: <UserAddOutlined />}\n      ];\n      const loggedInItems = [\n        {path: '/profile', text: 'My Profile', icon: <UserOutlined />},\n        // {path: '/settings', text: 'Account Settings', icon: <SettingFilled />},\n        {path: '/logout', text: 'Logout', icon: <LogoutOutlined />},\n      ];\n      let menuItems = isLoggedIn ? loggedInItems : authItems;\n      return menuItems.map((item, index) => {\n        return (\n          <MenuItem onClick={() => handleClose(item.path)} key={index}>\n            {item.icon} <Box ml={1}>{item.text}</Box>\n          </MenuItem>\n        )\n      })\n    }\n    return (\n      <div className={classes.root}>\n        <AppBar position=\"static\" variant={'elevation'}>\n          <Toolbar>\n            <Link to={'/'} edge=\"start\">\n              <Button variant={'text'} className={classes.homeButton} onClick={()=>{}}>\n                <HomeFilled size={24} className={classes.iconStyle} /> Would you rather?\n              </Button>\n            </Link>\n            <Grid container className={classes.navContainer} justify={'center'} alignItems={'center'} spacing={3}>\n              <Grid item>\n                <Link to={'/'}>\n                  <Button className={classes.homeButton}><HomeFilled className={classes.iconStyle}/> Home</Button>\n                </Link>\n              </Grid>\n              {\n                isLoggedIn &&\n                <Grid item>\n                  <Link to={'/polls/add'}>\n                    <Button className={classes.homeButton}><PlusOutlined className={classes.iconStyle}/> Create\n                      Poll</Button>\n                  </Link>\n                </Grid>\n              }\n              <Grid item>\n                <Link to={'/leaderboard'}>\n                  <Button className={classes.homeButton}><ApartmentOutlined className={classes.iconStyle}/> Leaderboard</Button>\n                </Link>\n              </Grid>\n              {\n                isLoggedIn &&\n                <Grid item>\n                  <Link to={'/my-polls'}>\n                    <Button className={classes.homeButton}><TableOutlined className={classes.iconStyle}/> My Polls</Button>\n                  </Link>\n                </Grid>\n              }\n            </Grid>\n            <Box ml={'auto'}>\n              {\n                isLoggedIn &&\n                  <Button className={classes.homeButton} onClick={() => handleClose('/profile')} variant={'text'}>\n                    <Avatar alt={`${firstname}'s Profile Picture`} src={profilePicture} className={classes.avatarStyle}/> {firstname} {lastname}\n                  </Button>\n              }\n              <IconButton\n                aria-label=\"account of current user\"\n                aria-controls=\"menu-appbar\"\n                aria-haspopup=\"true\"\n                onClick={handleMenu}\n                color=\"inherit\"\n              >\n                <UserOutlined />\n              </IconButton>\n              <Menu\n                id=\"menu-appbar\"\n                anchorEl={anchorEl}\n                anchorOrigin={{\n                  vertical: 'top',\n                  horizontal: 'right',\n                }}\n                keepMounted\n                transformOrigin={{\n                  vertical: 'top',\n                  horizontal: 'right',\n                }}\n                open={open}\n                onClose={handleClose}\n              >\n                {renderMenuItems()}\n              </Menu>\n            </Box>\n          </Toolbar>\n        </AppBar>\n      </div>\n);\n}\nexport default Header;\n","import React, { useEffect } from \"react\";\nimport { withSnackbar } from \"notistack\";\nimport { useHistory } from \"react-router-dom\";\nconst Error404Page = ({enqueueSnackbar}) => {\n  let history = useHistory();\n\n  useEffect(() => {\n    let snackbars = history?.location?.state?.snackbars;\n    if (snackbars) {\n      snackbars.map(({text, variant}) => enqueueSnackbar(text, {variant}));\n      history.replace({\n        pathname: '/404',\n        state: {}\n      });\n    }\n  }, []);\n  return (\n    <h1>Error 404 Page</h1>\n  )\n}\nexport default withSnackbar(Error404Page);\n","import React from \"react\";\nconst UserProfilePage = () => {\n  return (\n    <h1>User Profile Page</h1>\n  )\n}\nexport default UserProfilePage;\n","import {createMuiTheme} from \"@material-ui/core\";\nexport const MAIN_COLOR = '#01579b';\nexport const SECONDARY_COLOR = '#546e7a';\nconst theme = createMuiTheme({\n  palette: {\n    primary: {main: MAIN_COLOR},\n    secondary: {main: SECONDARY_COLOR},\n    // type: \"dark\"\n  },\n});\nexport default theme;\n","import React from \"react\";\nimport {Avatar, Button, Card, CardContent, CardHeader, Grid, Typography} from \"@material-ui/core\";\nimport {Link} from \"react-router-dom\";\nimport {makeStyles} from \"@material-ui/styles\";\nimport {MAIN_COLOR} from \"../../config/theme\";\nimport PropTypes from 'prop-types';\nconst styles = makeStyles({\n  cardHeader: {\n    borderBottom: `2px solid ${MAIN_COLOR}`,\n    textTransform: 'capitalize',\n    backgroundColor: `${MAIN_COLOR}20`\n  },\n  cardContentContainer: {},\n  userContainer: {\n    borderRight: `2px solid ${MAIN_COLOR}`\n  },\n  pollDataContainer: {\n    flex: 1,\n  },\n  buttonContainer: {\n    marginTop: 16,\n    display: 'block'\n  },\n  avatarStyle: {\n    height: 100,\n    width: 100\n  },\n})\nconst PollCard = ({poll}) => {\n  const classes = styles();\n  const {title, createdBy, _id} = poll;\n  const {firstname, lastname, profilePicture} = createdBy || {};\n  return (\n    <Grid item md={8} lg={7} xl={7} sm={10} xs={12}>\n      <Link to={`/polls/${_id}`}>\n        <Card variant={\"elevation\"}>\n          <CardHeader className={classes.cardHeader} title={`${firstname || ''} ${lastname || ''} Asked...`}/>\n          <CardContent className={classes.cardContentContainer}>\n            <Grid container justify={'center'} alignItems={'center'} spacing={2}>\n              <Grid className={classes.userContainer} item>\n                <Avatar className={classes.avatarStyle} sizes={'large'} variant={\"square\"} src={profilePicture} />\n              </Grid>\n              <Grid className={classes.pollDataContainer} item>\n                <Typography gutterBottom={true}>{title || 'Would you rather...?'}</Typography>\n              </Grid>\n            </Grid>\n            <Button variant={'contained'} className={classes.buttonContainer} color={'primary'} fullWidth={true}>\n              View Poll\n            </Button>\n          </CardContent>\n        </Card>\n      </Link>\n    </Grid>\n  )\n}\nPollCard.prototype = {\n  title: PropTypes.string.isRequired,\n  _id: PropTypes.string.isRequired,\n  createdBy: {\n    firstname: PropTypes.string,\n    lastname: PropTypes.string,\n    profilePicture: PropTypes.string,\n  }\n}\nexport default PollCard;\n","import React from \"react\";\nimport {ToggleButtonGroup, ToggleButton} from '@material-ui/lab';\nimport {Grid} from \"@material-ui/core\";\nimport {makeStyles} from \"@material-ui/styles\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {filterPolls} from \"../../redux/actions\";\nconst styles = makeStyles({\n  filterContainerStyle: {\n    marginBottom: 20\n  }\n})\nconst Filter = () => {\n  const classes = styles();\n  const {filterBy} = useSelector(state => state.polls);\n  const {_id} = useSelector(state => state.user.profile);\n  const dispatch = useDispatch();\n  const onButtonClick = (e, value) => {\n    if (value !== filterBy) {\n      dispatch(filterPolls(value, _id));\n    }\n  }\n  return (\n    <Grid container alignItems={'center'} justify={'center'} className={classes.filterContainerStyle}>\n\n    <ToggleButtonGroup\n      value={filterBy}\n      exclusive\n      onChange={onButtonClick}\n      aria-label=\"filter polls\"\n    >\n      <ToggleButton value=\"top\">\n        Top\n      </ToggleButton>\n      <ToggleButton value=\"latest\">\n        Latest\n      </ToggleButton>\n      <ToggleButton value=\"answered\">\n        Answered\n      </ToggleButton>\n      <ToggleButton value=\"unanswered\">\n        Unanswered\n      </ToggleButton>\n    </ToggleButtonGroup>\n    </Grid>\n  )\n}\nexport default Filter;\n","import {makeStyles} from \"@material-ui/styles\";\nimport {Box, CircularProgress} from \"@material-ui/core\";\nimport React from \"react\";\n\nconst styles = makeStyles({\n\n  loadingContainer: {\n    position: 'absolute',\n    width: '100%',\n    height: '100%',\n    top: 0,\n    left: 0,\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center'\n  }\n});\nconst Loader = () => {\n  const classes = styles();\n  return (\n    <Box className={classes.loadingContainer}>\n      <CircularProgress />\n    </Box>\n  )\n};\nexport default Loader;\n","import {Box, Card, CardContent, CardMedia, Chip, Grid, Typography} from \"@material-ui/core\";\nimport React from \"react\";\nimport {makeStyles} from \"@material-ui/styles\";\nimport moment from \"moment\";\nimport {MAIN_COLOR} from \"../../config/theme\";\nimport PropTypes from 'prop-types';\nconst styles = makeStyles({\n  userCardContainerStyle: {\n    // marginRight: 20\n  },\n  userImageContainerStyle: {\n    height: 300,\n    width: 250\n  },\n  userNameStyle: {\n    textTransform: 'capitalize'\n  },\n  cardHeader: {\n    borderBottom: `2px solid ${MAIN_COLOR}`,\n    textTransform: 'capitalize',\n  },\n  cardContentContainer: {},\n  userContainer: {\n    borderRight: `2px solid ${MAIN_COLOR}`\n  },\n  badgeStyle: {\n    top: -5,\n    right: -4,\n    position: 'absolute',\n    height: 40,\n    width: 40,\n    borderRadius: 20\n  },\n  userDataContainer: {\n    flex: 1,\n    position: 'relative'\n  },\n  buttonContainer: {\n    marginTop: 16,\n    display: 'block'\n  },\n  avatarStyle: {\n    height: 100,\n    width: 100\n  },\n})\nconst UserCard = ({user, isProfile = false, createdAt}) => {\n  const {profilePicture, firstname, lastname, score} = user;\n  const classes = styles();\n  return (\n    <Grid item className={classes.userCardContainerStyle}>\n      <Card variant={'elevation'}>\n        <CardMedia className={classes.userImageContainerStyle} image={profilePicture} src={profilePicture} />\n        <CardContent>\n          <Typography className={classes.cardHeader} variant={'h5'} gutterBottom={true}>{firstname} {lastname}</Typography>\n          <Typography gutterBottom={true} variant={'subtitle2'}>Score: <Chip color={'primary'} size={'medium'} label={score}/></Typography>\n          {\n            isProfile?\n              <Grid className={classes.userDataContainer} item>\n                <Typography gutterBottom={true}>Polls Created: <strong>{user.createdPolls.length}</strong></Typography>\n                <Typography gutterBottom={true}>Polls Answered: <strong>{user.answeredPolls.length}</strong></Typography>\n              </Grid>\n              :\n              <Typography\n                className={classes.userNameStyle}\n                variant={'subtitle2'}>\n                Created At: {moment(createdAt).format('YYYY/MM/DD HH:MMA')}\n              </Typography>\n          }\n        </CardContent>\n      </Card>\n    </Grid>\n  )\n}\nUserCard.prototype = {\n  isProfile: PropTypes.bool,\n  createdAt: PropTypes.string.isRequired,\n  user:{\n    firstname: PropTypes.string,\n    lastname: PropTypes.string,\n    profilePicture: PropTypes.string,\n    score: PropTypes.number\n  }\n}\nexport default UserCard;\n","import {Badge, Box, Chip, Divider, Typography} from \"@material-ui/core\";\nimport React from \"react\";\nimport PropTypes from 'prop-types';\nimport {makeStyles} from \"@material-ui/styles\";\nconst styles = makeStyles({\n\n  buttonContainer: {\n    marginBottom: 16,\n  },\n})\nconst AnalysisData = ({data}) => {\n  const {\n    totalAnswersCount,\n    option1Count,\n    option2Count\n  } = data;\n  const classes = styles();\n  return (\n    <Box>\n      <Divider className={classes.buttonContainer} />\n      <Typography gutterBottom={true}>\n        Total Votes: <strong>{totalAnswersCount}</strong>\n      </Typography>\n      <Typography gutterBottom={true}>\n        Option 1 Votes: <Chip color={'primary'} size={'medium'} label={`${totalAnswersCount === 0 ? 0 : (option1Count / totalAnswersCount) * 100}% (${option1Count})` } />\n      </Typography>\n      <Typography gutterBottom={true}>\n        Option 2 Votes: <Chip color={'primary'} size={'medium'} label={`${totalAnswersCount === 0 ? 0 : (option2Count / totalAnswersCount) * 100}% (${option2Count})` } />\n      </Typography>\n    </Box>\n  )\n}\nAnalysisData.prototype = {\n  data: {\n    totalAnswersCount: PropTypes.number,\n    option1Count: PropTypes.number,\n    option2Count: PropTypes.number,\n  }\n}\nexport default AnalysisData;\n","import {Button, Grid} from \"@material-ui/core\";\nimport React from \"react\";\nimport {makeStyles} from \"@material-ui/styles\";\nimport PropTypes from 'prop-types';\nconst styles = makeStyles({\n  buttonContainer: {\n    marginBottom: 6,\n  },\n})\nconst PollButtons = ({options, onOptionClick}) => {\n  const classes = styles();\n  return (\n    <Grid\n      className={classes.buttonContainer}\n      container\n      justify={'space-between'}\n      alignItems={'center'}\n      spacing={3}>\n        <Grid item xs={6}>\n          <Button onClick={() => onOptionClick(options[0])} variant={'contained'} color={'primary'} fullWidth={true}>\n            Option 1\n          </Button>\n        </Grid>\n        <Grid item xs={6}>\n          <Button onClick={() => onOptionClick(options[1])} variant={'contained'} color={'secondary'} fullWidth={true}>\n            Option 2\n          </Button>\n        </Grid>\n    </Grid>\n  )\n}\nPollButtons.prototype = {\n  options: PropTypes.arrayOf(PropTypes.string).isRequired,\n  onOptionClick: PropTypes.func.isRequired\n}\nexport default PollButtons;\n","import {Button, Typography} from \"@material-ui/core\";\nimport {Link} from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\n\nconst YouMustLogin = ({to}) => {\n  return (\n    <Box>\n      <Typography>You must login to {to}</Typography>\n      <Link to={'/sign-in'}>\n        <Button variant={'contained'} color={'primary'}>Login</Button>\n      </Link>\n    </Box>\n  )\n}\nYouMustLogin.prototype = {\n  to: PropTypes.string.isRequired\n}\nexport default YouMustLogin;\n","import {Box, Typography} from \"@material-ui/core\";\nimport moment from \"moment\";\nimport { BorderlessTableOutlined} from \"@ant-design/icons\";\nimport PropTypes from 'prop-types';\nconst AnswerDetails = ({answerDetails}) => {\n  const {answer, createdAt} = answerDetails;\n  return (\n    <Box mb={2}>\n      <Typography>Your Answer</Typography>\n      <Typography variant={'subtitle1'}><BorderlessTableOutlined /> {answer}</Typography>\n      <Typography gutterBottom={true}>On: {moment(createdAt).format('YYYY/MM/DD HH:MMA')}</Typography>\n    </Box>\n  )\n}\nAnswerDetails.prototype = {\n  answerDetails: {\n    answer: PropTypes.string.isRequired,\n    createdAt: PropTypes.string.isRequired\n  }\n}\nexport default AnswerDetails;\n","import React from \"react\";\nimport {Avatar, Box, Button, Card, CardContent, CardHeader, Divider, Grid, Typography} from \"@material-ui/core\";\nimport {Link} from \"react-router-dom\";\nimport {makeStyles} from \"@material-ui/styles\";\nimport {MAIN_COLOR} from \"../../config/theme\";\nimport {BorderOutlined, StarFilled, StarOutlined} from \"@ant-design/icons\";\nimport AnalysisData from \"./AnalysisData\";\nimport PollButtons from \"./PollButtons\";\nimport YouMustLogin from \"../common/YouMustLogin\";\nimport AnswerDetails from \"./AnswerDetails\";\nimport PropTypes from 'prop-types';\nconst styles = makeStyles({\n  cardHeader: {\n    borderBottom: `2px solid ${MAIN_COLOR}`,\n    textTransform: 'capitalize',\n    backgroundColor: `${MAIN_COLOR}20`\n  },\n  title: {\n    textTransform: 'capitalize',\n  },\n  containerStyle: {\n    flex: 1\n  },\n  userContainer: {\n    borderRight: `2px solid ${MAIN_COLOR}`\n  },\n  pollDataContainer: {\n    flex: 1,\n  },\n  buttonContainer: {\n    marginBottom: 16,\n  },\n  iconStyle: {\n    marginRight: 10\n  },\n})\nconst PollDetailsCard = ({pollDetails, answerDetails, isLoggedIn, onOptionClick}) => {\n  const classes = styles();\n  const {title, option1, option2, totalAnswersCount, option1Count, option2Count} = pollDetails;\n  return (\n    <Grid className={classes.containerStyle} item={true} >\n        <Card variant={\"elevation\"}>\n          <CardHeader className={classes.cardHeader} title={'Would you rather...?'}/>\n          <CardContent>\n            <Typography className={classes.title} gutterBottom={true} variant={'h5'}>{title}</Typography>\n            <Typography className={classes.title} gutterBottom={true} variant={'h6'}>\n              {answerDetails?.answer === option1 ? <StarFilled className={classes.iconStyle} /> : <StarOutlined className={classes.iconStyle} />}\n              {option1}\n            </Typography>\n            <Typography className={classes.title} gutterBottom={true} variant={'h6'}>\n              {answerDetails?.answer === option2 ? <StarFilled className={classes.iconStyle} /> : <StarOutlined className={classes.iconStyle} />}\n              {option2}\n            </Typography>\n            <Divider className={classes.buttonContainer} />\n            {\n              answerDetails ?\n                <AnswerDetails answerDetails={answerDetails} />\n                : isLoggedIn ?\n                  <PollButtons options={[option1, option2]} onOptionClick={onOptionClick} />\n                  : <YouMustLogin to={'answer to this poll'} />\n            }\n            <AnalysisData data={{\n              totalAnswersCount,\n              option1Count,\n              option2Count,\n            }} />\n          </CardContent>\n        </Card>\n    </Grid>\n  )\n}\nPollDetailsCard.prototype = {\n  pollDetails: {\n    title: PropTypes.string.isRequired,\n    option1: PropTypes.string.isRequired,\n    option2: PropTypes.string.isRequired,\n    totalAnswersCount: PropTypes.number.isRequired,\n    option1Count: PropTypes.number.isRequired,\n    option2Count: PropTypes.number.isRequired\n  },\n  answerDetails: {\n    answer: PropTypes.string.isRequired,\n    createdAt: PropTypes.string.isRequired\n  },\n  isLoggedIn: PropTypes.bool.isRequired,\n  onOptionClick: PropTypes.func.isRequired\n}\nexport default PollDetailsCard;\n","import React, {useEffect, useState} from \"react\";\nimport {\n  Box, Card, CardMedia,\n  Grid,\n} from \"@material-ui/core\";\nimport {answerPollRequest, getAllPollsRequest, getPollRequest} from \"../../redux/actions\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport PollCard from \"../../components/polls/PollCard\";\nimport Filter from \"../../components/polls/Filter\";\nimport Loader from \"../../components/common/Loader\";\nimport {withSnackbar} from \"notistack\";\nimport {useParams, Redirect} from \"react-router\";\nimport UserCard from \"../../components/polls/UserCard\";\nimport PollDetailsCard from \"../../components/polls/PollDetailsCard\";\n\nconst PollDetailsPage = ({enqueueSnackbar}) => {\n  const dispatch = useDispatch();\n  const {pollData, pollError} = useSelector(state => state.polls);\n  const {isLoading} = useSelector(state => state.loading);\n  const {pollId} = useParams();\n  const {pollDetails, answerDetails} = pollData;\n  const {isLoggedIn} = useSelector(state => state.user);\n  const user = pollDetails?.createdBy;\n  useEffect(() => {\n    enqueueSnackbar('Fetching poll details...', {variant: 'info'});\n    dispatch(getPollRequest(pollId));\n  }, []);\n\n  const onOptionClick = option => {\n    dispatch(answerPollRequest(pollId, option));\n  }\n\n  if (isLoading) {\n    return (\n      <Loader/>\n    )\n  }\n  if (pollError !== '') {\n    return <Redirect to={{\n      pathname: '/404',\n      state: {\n        snackbars: [{text: pollError, variant: 'error'}]\n      }\n    }} />\n  }\n  return (\n    <Box p={5}>\n      <Grid container alignItems={'flex-start'} justify={'center'} spacing={4}>\n        {user && <UserCard user={user} />}\n        {pollDetails && <PollDetailsCard onOptionClick={onOptionClick} isLoggedIn={isLoggedIn} pollDetails={pollDetails} answerDetails={answerDetails} />}\n      </Grid>\n    </Box>\n  )\n}\nexport default withSnackbar(PollDetailsPage);\n","import React, {useEffect, useState} from \"react\";\nimport {\n  Backdrop,\n  Box,\n  Button,\n  Card,\n  CardContent,\n  CircularProgress,\n  Grid,\n  TextField,\n  Typography\n} from \"@material-ui/core\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {clearPollInputs, createPollRequest, updatePollInput} from \"../../redux/actions\";\nimport {withSnackbar} from \"notistack\";\nimport {Redirect} from \"react-router-dom\";\nimport Loader from \"../../components/common/Loader\";\nconst CreatePollPage = ({enqueueSnackbar}) => {\n  const dispatch = useDispatch();\n  const {title, option1, option2} = useSelector(state => state.polls);\n  const {isLoading} = useSelector(state => state.loading);\n  const [creatingState, setCreatingState] = useState('');\n  const resetInputs = () => {dispatch(clearPollInputs())}\n  const onInputUpdate = (key, value) => {\n    dispatch(updatePollInput(key, value));\n  };\n  const onSubmit = () => {\n    enqueueSnackbar('Creating your poll...', {variant: 'info'});\n    dispatch(createPollRequest());\n  }\n  useEffect(() => {\n    if (isLoading) {\n      setCreatingState('creating');\n    } else {\n      if (creatingState === 'creating') {\n        setCreatingState('created');\n      }\n    }\n  }, [isLoading]);\n  if (isLoading) {\n    return <Loader />\n  }\n  if (creatingState === 'created') {\n    enqueueSnackbar('Your poll has been created successfully!', {variant: 'success'});\n    return <Redirect to={'/'} />;\n  }\n  return (\n    <Box p={3}>\n      <Grid container justify={'center'} alignItems={'center'} direction={'column'}>\n        <Grid item xl={6} lg={8} md={10} sm={12}>\n          <Card variant={'elevation'}>\n            <CardContent>\n              <form>\n                <Grid container justify={'center'} alignItems={'center'} direction={'column'}>\n                  <Backdrop style={{zIndex: 9}} open={isLoading}><CircularProgress/></Backdrop>\n                  <Typography\n                    variant={'h3'}\n                    gutterBottom={true}\n                    component={'h3'}>Would you rather...?</Typography>\n                  <Typography\n                    variant={'body2'}\n                    paragraph={true}\n                    gutterBottom={true}\n                    component={'p'}>Please try to be descriptive and precise as possible</Typography>\n                  <TextField\n                    margin={\"normal\"}\n                    label={'Title'}\n                    variant={'outlined'}\n                    size={'medium'}\n                    fullWidth={true}\n                    multiline={true}\n                    helperText={'This field is required'}\n                    value={title}\n                    onChange={(event) => onInputUpdate('title', event.target.value)}\n                    required={true}\n                    error={false}\n                    name={'poll_title'}\n                    placeholder={'i.e. eating apples or bananas'}/>\n                  <TextField\n                    label={'Option 1'}\n                    variant={'outlined'}\n                    size={'medium'}\n                    margin={\"normal\"}\n                    fullWidth={true}\n                    required={true}\n                    error={false}\n                    helperText={'This field is required'}\n                    value={option1}\n                    onChange={(event) => onInputUpdate('option1', event.target.value)}\n                    name={'poll_first_option'}\n                    placeholder={'i.e. apples'}/>\n                  <TextField\n                    label={'Option 2'}\n                    variant={'outlined'}\n                    margin={\"normal\"}\n                    size={'medium'}\n                    fullWidth={true}\n                    helperText={'This field is required'}\n                    required={true}\n                    error={false}\n                    value={option2}\n                    onChange={(event) => onInputUpdate('option2', event.target.value)}\n                    name={'poll_second_option'}\n                    placeholder={'i.e. bananas'}/>\n                    <Box>\n                      <Button style={{marginRight: 10}} onClick={resetInputs} variant={'outlined'}>Reset</Button>\n                      <Button onClick={onSubmit} disabled={title === '' || option1 === '' || option2 === ''} variant={\"contained\"} color={'primary'}>Create</Button>\n                    </Box>\n                </Grid>\n              </form>\n            </CardContent>\n          </Card>\n        </Grid>\n      </Grid>\n    </Box>\n  )\n}\nexport default withSnackbar(CreatePollPage);\n","import React from \"react\";\nimport {Avatar, Card, CardContent, Chip, Grid, Typography} from \"@material-ui/core\";\nimport {makeStyles} from \"@material-ui/styles\";\nimport {MAIN_COLOR} from \"../../config/theme\";\nimport PropTypes from 'prop-types';\nconst styles = makeStyles({\n  cardHeader: {\n    borderBottom: `2px solid ${MAIN_COLOR}`,\n    textTransform: 'capitalize',\n  },\n  cardContentContainer: {},\n  userContainer: {\n    borderRight: `2px solid ${MAIN_COLOR}`\n  },\n  badgeStyle: {\n    top: -5,\n    right: -4,\n    position: 'absolute',\n    height: 40,\n    width: 40,\n    borderRadius: 20\n  },\n  userDataContainer: {\n    flex: 1,\n    position: 'relative'\n  },\n  buttonContainer: {\n    marginTop: 16,\n    display: 'block'\n  },\n  avatarStyle: {\n    height: 100,\n    width: 100\n  },\n})\nconst LeaderboardCard = ({user}) => {\n  const {profilePicture, firstname ,lastname, score, createdPolls, answeredPolls} = user;\n  const classes = styles();\n  return (\n    <Grid item md={8} lg={7} xl={7} sm={10} xs={12}>\n      <Card variant={\"elevation\"}>\n        <CardContent className={classes.cardContentContainer}>\n          <Grid container justify={'center'} alignItems={'center'} spacing={2}>\n            <Grid className={classes.userContainer} item>\n              <Avatar className={classes.avatarStyle} sizes={'large'} variant={\"square\"} src={profilePicture} />\n            </Grid>\n            <Grid className={classes.userDataContainer} item>\n              <Chip className={classes.badgeStyle} color={\"primary\"} size={'medium'} label={score}/>\n              <Typography className={classes.cardHeader} variant={'h5'} gutterBottom={true}>{firstname} {lastname}</Typography>\n              <Typography gutterBottom={true}>Polls Created: <strong>{createdPolls.length}</strong></Typography>\n              <Typography gutterBottom={true}>Polls Answered: <strong>{answeredPolls.length}</strong></Typography>\n            </Grid>\n          </Grid>\n        </CardContent>\n      </Card>\n    </Grid>\n  )\n}\nLeaderboardCard.prototype = {\n  user: {\n    profilePicture: PropTypes.string,\n    firstname: PropTypes.string,\n    lastname: PropTypes.string,\n    score: PropTypes.number,\n    createdPolls: PropTypes.arrayOf(PropTypes.string),\n    answeredPolls: PropTypes.arrayOf(PropTypes.string)\n  }\n}\nexport default LeaderboardCard;\n","import React, {useEffect} from \"react\";\nimport {\n  Box,\n  Grid,\n} from \"@material-ui/core\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport LeaderboardCard from \"../components/polls/LeaderboardCard\";\nimport {getLeaderboardRequest} from \"../redux/actions\";\nimport Loader from \"../components/common/Loader\";\n\nconst LeaderboardPage = () => {\n  const dispatch = useDispatch();\n  const {leaderboard} = useSelector(state => state.polls);\n  const {isLoading} = useSelector(state => state.loading);\n  useEffect(() => {\n    dispatch(getLeaderboardRequest());\n  }, []);\n  if (isLoading) {\n    return (\n      <Loader/>\n    )\n  }\n  return (\n    <Box p={5}>\n      <Grid container alignItems={'center'} justify={'center'} spacing={2}>\n        {leaderboard.map((user) => <LeaderboardCard user={user} key={user._id} />)}\n      </Grid>\n    </Box>\n  )\n}\nexport default LeaderboardPage;\n","import React from \"react\";\nimport {useSelector} from \"react-redux\";\nimport {Route, Redirect} from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\n\nconst PrivateRoute = ({path, component: Component, ...rest}) => {\n  let {isLoggedIn} = useSelector(state => state.user);\n    return <Route {...rest} path={path} render={() => {\n      return isLoggedIn ?\n        <Component /> :\n        <Redirect to={'/sign-in'} />\n    }}/>\n}\nPrivateRoute.prototype = {\n  path: PropTypes.string.isRequired,\n  component: PropTypes.func.isRequired,\n}\nexport default PrivateRoute;\n","import React, {useRef} from \"react\";\nimport {\n  Avatar,\n  Backdrop,\n  Box,\n  Button,\n  Card,\n  CardContent,\n  CardHeader, CircularProgress,\n  Divider,\n  Grid, TextField,\n  Typography\n} from \"@material-ui/core\";\nimport {makeStyles} from \"@material-ui/styles\";\nimport {MAIN_COLOR} from \"../../config/theme\";\nimport Validator from \"validator\";\nimport PropTypes from 'prop-types';\nconst styles = makeStyles({\n  cardHeader: {\n    borderBottom: `2px solid ${MAIN_COLOR}`,\n    textTransform: 'capitalize',\n  },\n  profilePicture: {\n    width: 150,\n    height: 150\n  },\n  title: {\n    textTransform: 'capitalize',\n  },\n  containerStyle: {\n    flex: 1\n  },\n  userContainer: {\n    borderRight: `2px solid ${MAIN_COLOR}`\n  },\n  pollDataContainer: {\n    flex: 1,\n  },\n  buttonContainer: {\n    marginBottom: 16,\n  },\n  iconStyle: {\n    marginRight: 10\n  },\n});\nconst labels = {\n  firstname: 'First Name',\n  lastname: 'Last Name',\n  email: 'Email',\n  newPassword: 'New Password',\n  confirmPassword: 'Confirm Password'\n};\nconst UpdateProfileCard = ({\n onInfoSave,\n onPasswordSave,\n onImageUpload,\n imagePreview,\n info,\n password,\n onInfoInputUpdate,\n onPasswordInputUpdate,\n savingImage,\n savingInfo,\n savingPassword\n}) => {\n  const imageRef = useRef(null);\n  const onUploadButtonClick = () => {\n    imageRef.current.click();\n  }\n  const infoDisabledState = () => {\n    return info.firstname === '' || info.lastname === '' || info.email === '' || !Validator.isEmail(info.email) || savingInfo;\n  }\n  const passwordDisabledState = () => {\n    return password.newPassword !== password.confirmPassword || password.newPassword === '' || savingPassword;\n  }\n  const classes = styles();\n  return (\n    <Grid className={classes.containerStyle} item={true} >\n        <Card variant={\"elevation\"}>\n          <CardHeader className={classes.cardHeader} title={'Edit info...'}/>\n          <CardContent>\n\n            <Typography variant={'h5'} className={classes.cardHeader} gutterBottom={true}>Change Profile Picture</Typography>\n            <form>\n              <input\n                ref={imageRef}\n                type=\"file\"\n                name=\"profilePicture\"\n                hidden={true}\n                onChange={onImageUpload}/>\n            </form>\n            <Box position={'relative'}>\n              <Grid container justify={'space-between'} alignItems={'center'}>\n                <Avatar src={imagePreview} variant={\"square\"} className={classes.profilePicture} />\n                <Button\n                  variant={\"contained\"}\n                  color={'primary'}\n                  onClick={onUploadButtonClick}\n                  disabled={savingImage}>\n                  {savingImage && <CircularProgress size={24} className={classes.iconStyle} color={'inherit'}/>}Upload New Image\n                </Button>\n              </Grid>\n            </Box>\n            <Box m={2} />\n            <Divider />\n            <Box m={2} />\n            <Typography variant={'h5'} className={classes.cardHeader} gutterBottom={true}>Personal Info</Typography>\n            {Object.keys(info).map((key, index) => {\n              return <TextField\n                label={labels[key]}\n                key={key}\n                variant={'outlined'}\n                margin={\"normal\"}\n                size={'medium'}\n                fullWidth={true}\n                helperText={'This field is required'}\n                required={true}\n                value={info[key]}\n                onChange={(event) => onInfoInputUpdate(key, event.target.value)}\n                name={key}\n                placeholder={key}/>\n            })}\n            <Grid container justify={'center'}>\n              <Button\n                disabled={infoDisabledState()}\n                size={'large'}\n                variant={'contained'}\n                color={'primary'}\n                onClick={onInfoSave}>\n                {savingInfo && <CircularProgress size={24} className={classes.iconStyle} color={'inherit'}/>}\n                Save Info\n              </Button>\n            </Grid>\n            <Box m={2} />\n            <Divider />\n            <Box m={2} />\n            <Typography variant={'h5'} className={classes.cardHeader} gutterBottom={true}>Reset Password</Typography>\n            {Object.keys(password).map((key, index) => {\n              return <TextField\n                label={labels[key]}\n                key={key}\n                variant={'outlined'}\n                margin={\"normal\"}\n                size={'medium'}\n                type={'password'}\n                fullWidth={true}\n                helperText={'This field is required'}\n                required={true}\n                value={info[key]}\n                onChange={(event) => onPasswordInputUpdate(key, event.target.value)}\n                name={key}\n                placeholder={'Your password...'}/>\n            })}\n            <Grid container justify={'center'}>\n              <Button\n                disabled={passwordDisabledState()}\n                size={'large'}\n                variant={'contained'}\n                color={'primary'}\n                onClick={onPasswordSave}>\n                {savingPassword && <CircularProgress size={24} className={classes.iconStyle} color={'inherit'}/>}\n                Change Password\n              </Button>\n            </Grid>\n            <Box m={2} />\n          </CardContent>\n        </Card>\n    </Grid>\n  )\n}\nUpdateProfileCard.prototype = {\n  onInfoSave: PropTypes.func.isRequired,\n  onPasswordSave: PropTypes.func.isRequired,\n  onImageUpload: PropTypes.func.isRequired,\n  imagePreview: PropTypes.string.isRequired,\n  info: {\n    firstname: PropTypes.string.isRequired,\n    lastname: PropTypes.string.isRequired,\n    email: PropTypes.string.isRequired\n  },\n  password: {\n    newPassword: PropTypes.string.isRequired,\n    confirmPassword: PropTypes.string.isRequired\n  },\n  onInfoInputUpdate: PropTypes.func.isRequired,\n  onPasswordInputUpdate: PropTypes.func.isRequired,\n  savingImage: PropTypes.bool.isRequired,\n  savingInfo: PropTypes.bool.isRequired,\n  savingPassword: PropTypes.bool.isRequired\n}\nexport default UpdateProfileCard;\n","import {\n  CHANGE_PASSWORD_REQUEST, CHANGE_PASSWORD_RESPONSE,\n  SAVE_INFO_REQUEST,\n  SAVE_INFO_RESPONSE,\n  SET_LOADING_STATE,\n  UPLOAD_IMAGE_REQUEST,\n  UPLOAD_IMAGE_RESPONSE\n} from \"../types\";\n\nconst setLoadingState = (key, value) => ({\n  type: SET_LOADING_STATE,\n  payload: {key, value}\n});\nconst uploadImageRequest = (imageData) => ({\n  type: UPLOAD_IMAGE_REQUEST,\n  payload: {imageData}\n});\nconst uploadImageResponse = (profilePictureUrl) => ({\n  type: UPLOAD_IMAGE_RESPONSE,\n  payload: {profilePictureUrl}\n});\nconst saveInfoRequest = (info) => ({\n  type: SAVE_INFO_REQUEST,\n  payload: {info}\n});\nconst saveInfoResponse = (info) => ({\n  type: SAVE_INFO_RESPONSE,\n  payload: {info}\n});\nconst changePasswordRequest = (password) => ({\n  type: CHANGE_PASSWORD_REQUEST,\n  payload: {password}\n});\nconst changePasswordResponse = () => ({\n  type: CHANGE_PASSWORD_RESPONSE\n});\nexport {\n  uploadImageResponse,\n  uploadImageRequest,\n  setLoadingState,\n  saveInfoResponse,\n  saveInfoRequest,\n  changePasswordResponse,\n  changePasswordRequest\n}\n\n","import React, {useEffect, useState} from \"react\";\nimport {Box, Grid} from \"@material-ui/core\";\nimport UserCard from \"../../components/polls/UserCard\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport UpdateProfileCard from \"../../components/user/UpdateProfileCard\";\nimport {withSnackbar} from \"notistack\";\nimport {changePasswordRequest, saveInfoRequest, uploadImageRequest} from \"../../redux/actions/user\";\nconst MyProfilePage = ({enqueueSnackbar}) => {\n  const {\n    profile,\n    savingImage,\n    savingInfo,\n    savingPassword\n  } = useSelector(state => state.user);\n  const [loaders, setLoaders] = useState({info: '', password: '', image: ''});\n  let {firstname, lastname, email, profilePicture} = profile;\n  const [info, setInfo] = useState({\n    firstname,\n    lastname,\n    email\n  });\n  const [password, setPassword] = useState({\n    newPassword: '',\n    confirmPassword: '',\n  });\n  const [imagePreview, setImagePreview] = useState(profilePicture);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    if (!savingInfo && loaders.info === 'loading') {\n      enqueueSnackbar('Info Updated Successfully.', {variant: 'success'});\n      setLoaders({...loaders, info: ''});\n    }\n    if (!savingImage && loaders.image === 'loading') {\n      enqueueSnackbar('Image Uploaded Successfully.', {variant: 'success'});\n      setLoaders({...loaders, image: ''});\n    }\n    if (!savingPassword && loaders.password === 'loading') {\n      setPassword({newPassword: '', confirmPassword: ''});\n      enqueueSnackbar('Password Changed Successfully.', {variant: 'success'});\n      setLoaders({...loaders, password: ''});\n    }\n  }, [savingImage, savingInfo, savingPassword]);\n  const onInfoInputUpdate = (key, value) => {\n    setInfo({...info, [key]: value});\n  }\n  const onPasswordInputUpdate = (key, value) => {\n    setPassword({...password, [key]: value});\n  }\n  const onInfoSave = () => {\n    dispatch(saveInfoRequest(info));\n    setLoaders({...loaders, info : 'loading'});\n    enqueueSnackbar('Updating info...', {variant: 'info'})\n  };\n  const onPasswordSave = () => {\n    dispatch(changePasswordRequest(password));\n    setLoaders({...loaders, password: 'loading'});\n    enqueueSnackbar('Changing password...', {variant: 'info'})\n  };\n  const onImageUpload = (event) => {\n    let newImage = event.target.files[0];\n    const reader = new FileReader();\n    reader.addEventListener(\"load\", () => {\n      setImagePreview(reader.result);\n    });\n    reader.readAsDataURL(newImage);\n    dispatch(uploadImageRequest(newImage));\n    setLoaders({...loaders, image: 'loading'});\n    enqueueSnackbar('Uploading...', {variant: 'info'})\n  };\n  return (\n    <Box p={5}>\n      <Grid container alignItems={'flex-start'} justify={'center'} spacing={4}>\n        <UserCard isProfile={true} user={profile} />\n        <UpdateProfileCard\n          imagePreview={imagePreview}\n          onInfoSave={onInfoSave}\n          onPasswordSave={onPasswordSave}\n          onImageUpload={onImageUpload}\n          info={info}\n          password={password}\n          onInfoInputUpdate={onInfoInputUpdate}\n          onPasswordInputUpdate={onPasswordInputUpdate}\n          savingImage={savingImage}\n          savingInfo={savingInfo}\n          savingPassword={savingPassword}\n        />\n      </Grid>\n    </Box>\n  )\n}\nexport default withSnackbar(MyProfilePage);\n","import React from \"react\";\nconst AccountSettingsPage = () => {\n  return (\n    <h1>Feature Will be added later...</h1>\n  )\n}\nexport default AccountSettingsPage;\n","import {Fab} from \"@material-ui/core\";\nimport {PlusOutlined} from \"@ant-design/icons\";\nimport {Link} from \"react-router-dom\";\nimport React from \"react\";\nimport {makeStyles} from \"@material-ui/styles\";\nimport PropTypes from 'prop-types';\nconst styles = makeStyles({\n  floatingActionButtonStyle: {\n    position:'fixed',\n    bottom: 50,\n    right: 50\n  },\n});\n\nconst MyFab = ({to}) => {\nconst classes = styles();\n  return (\n    <Link to={to} className={classes.floatingActionButtonStyle}>\n      <Fab color=\"primary\" aria-label=\"add\">\n        <PlusOutlined />\n      </Fab>\n    </Link>\n  )\n}\nMyFab.prototype = {\n  to: PropTypes.string.isRequired\n}\nexport default MyFab\n","import React, {useEffect} from \"react\";\nimport {\n  Box, Button,\n  Grid, Typography,\n} from \"@material-ui/core\";\nimport {getMyPollsRequest} from \"../../redux/actions\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport PollCard from \"../../components/polls/PollCard\";\nimport Loader from \"../../components/common/Loader\";\nimport MyFab from \"../../components/common/MyFab\";\nimport {Result} from \"antd\";\nimport {Link} from \"react-router-dom\";\n\nconst MyPollsPage = () => {\n  const dispatch = useDispatch();\n  const {myPolls} = useSelector(state => state.polls);\n  const {isLoading} = useSelector(state => state.loading);\n  useEffect(() => {\n    dispatch(getMyPollsRequest());\n  }, []);\n  if (isLoading) {\n    return (\n      <Loader/>\n    )\n  }\n  return (\n    <Box p={5}>\n      <MyFab to={'/polls/add'}/>\n      <Grid container alignItems={'center'} justify={'center'} spacing={2}>\n        {myPolls.map((poll) => <PollCard poll={poll} key={poll._id} />)}\n        {myPolls.length === 0 &&\n          <Result\n            status=\"500\"\n            title={<Typography align={'center'} variant={'h5'} gutterBottom={true}>Oops!</Typography>}\n            subTitle={<Typography align={'center'} variant={'h6'} gutterBottom={true}>You haven't created any polls...</Typography>}\n            extra={<Link to={'/polls/add'}>\n              <Grid container justify={'center'}>\n                <Button color={\"primary\"} variant={'contained'}>Create the first one?</Button>\n              </Grid>\n            </Link>}\n          />}\n      </Grid>\n    </Box>\n  )\n}\nexport default MyPollsPage;\n","import React, {useEffect, useState} from \"react\";\nimport {Box, Button, Card, CardContent, CircularProgress, Grid, TextField, Typography} from \"@material-ui/core\";\nimport {withSnackbar} from \"notistack\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {Link} from \"react-router-dom\";\nimport {setSignInError, setSignUpError,  signInRequest} from \"../../redux/actions\";\nimport {Alert} from \"@material-ui/lab\";\nconst SignInPage = ({enqueueSnackbar}) => {\n  const dispatch = useDispatch();\n  const {signInError} = useSelector(state => state.auth);\n  const {isLoading} = useSelector(state => state.loading);\n  const [form, setForm] = useState({email: '', password: ''});\n  useEffect(() => {\n    dispatch(setSignInError(''));\n    dispatch(setSignUpError(''));\n  }, []);\n  const onInputUpdate = (key, value) => {\n    setForm({\n      ...form,\n      [key]: value\n    });\n  };\n  const onSignInClick = () => {\n    enqueueSnackbar('Attempting to sign in...', {variant: 'info'});\n    dispatch(signInRequest(form));\n  }\n  return (\n    <Box p={5}>\n      <Grid container justify={'center'}>\n        <Card>\n          <CardContent>\n            <Typography color={'primary'} component={'h3'} gutterBottom={true} align={'center'} variant={'h3'}>Sign In</Typography>\n            {signInError && <Alert color={'error'} severity={'error'}>{signInError}</Alert>}\n            <TextField\n              label={'Email'}\n              variant={'outlined'}\n              margin={\"normal\"}\n              size={'medium'}\n              type={'email'}\n              fullWidth={true}\n              value={form.email}\n              onChange={(event) => onInputUpdate('email', event.target.value)}\n              name={'email'}\n              placeholder={'Your email...'}/>\n            <TextField\n              label={'Password'}\n              variant={'outlined'}\n              margin={\"normal\"}\n              size={'medium'}\n              type={'password'}\n              fullWidth={true}\n              value={form.password}\n              onChange={(event) => onInputUpdate('password', event.target.value)}\n              name={'password'}\n              placeholder={'Your password...'}/>\n            <Typography gutterBottom={true} variant={'subtitle1'}>\n              Don't have an account?\n              <Link to={'/sign-up'}>\n                <Button color={'primary'} size={'small'} variant={'text'}>\n                  Create one\n                </Button>\n              </Link>\n              </Typography>\n            <Grid container justify={'center'}>\n              <Button disabled={form.email === '' || form.password === '' || isLoading} onClick={onSignInClick} variant={'contained'} size={'large'} color={'primary'}>\n                {isLoading && <CircularProgress style={{marginRight: 5}} />}\n                Sign In\n              </Button>\n            </Grid>\n          </CardContent>\n        </Card>\n      </Grid>\n    </Box>\n  )\n}\nexport default withSnackbar(SignInPage);\n","import React, {useEffect, useState} from \"react\";\nimport {\n  Box,\n  Button,\n  Card,\n  CardContent, Checkbox,\n  CircularProgress, Dialog, DialogActions, DialogContent, DialogTitle,\n  FormControlLabel,\n  Grid,\n  TextField,\n  Typography\n} from \"@material-ui/core\";\nimport {withSnackbar} from \"notistack\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {Link} from \"react-router-dom\";\nimport {setSignInError, setSignUpError, signUpRequest} from \"../../redux/actions\";\nimport {Alert} from \"@material-ui/lab\";\n\nconst SignUpPage = ({enqueueSnackbar}) => {\n  const dispatch = useDispatch();\n  const {signUpError} = useSelector(state => state.auth);\n  const {isLoading} = useSelector(state => state.loading);\n  const [form, setForm] = useState({\n    firstname: '',\n    lastname: '',\n    email: '',\n    password: '',\n    confirmPassword: ''\n  });\n  const [terms, setTerms] = useState(false);\n  const [dialog, setDialog] = useState(false);\n  useEffect(() => {\n    dispatch(setSignInError(''));\n    dispatch(setSignUpError(''));\n  }, []);\n  const onInputUpdate = (key, value) => {\n    setForm({\n      ...form,\n      [key]: value\n    });\n  };\n  const onSignUpClick = () => {\n    enqueueSnackbar('Creating your account...', {variant: 'info'});\n    dispatch(signUpRequest(form));\n  }\n  return (\n    <Box p={5}>\n      <Grid container justify={'center'}>\n        <Card>\n          <CardContent>\n            <Typography color={'primary'} component={'h3'} gutterBottom={true} align={'center'} variant={'h3'}>Create a new account</Typography>\n            {signUpError && <Alert color={'error'} severity={'error'}>{signUpError}</Alert>}\n            <TextField\n              label={'First Name'}\n              variant={'outlined'}\n              margin={\"normal\"}\n              size={'medium'}\n              type={'text'}\n              fullWidth={true}\n              value={form.firstname}\n              onChange={(event) => onInputUpdate('firstname', event.target.value)}\n              name={'firstname'}\n              placeholder={'Your first name...'}/>\n            <TextField\n              label={'Last Name'}\n              variant={'outlined'}\n              margin={\"normal\"}\n              size={'medium'}\n              type={'text'}\n              fullWidth={true}\n              value={form.lastname}\n              onChange={(event) => onInputUpdate('lastname', event.target.value)}\n              name={'lastname'}\n              placeholder={'Your last name...'}/>\n            <TextField\n              label={'Email'}\n              variant={'outlined'}\n              margin={\"normal\"}\n              size={'medium'}\n              type={'email'}\n              fullWidth={true}\n              value={form.email}\n              onChange={(event) => onInputUpdate('email', event.target.value)}\n              name={'email'}\n              placeholder={'Your email...'}/>\n            <TextField\n              label={'Password'}\n              variant={'outlined'}\n              margin={\"normal\"}\n              size={'medium'}\n              type={'password'}\n              fullWidth={true}\n              value={form.password}\n              onChange={(event) => onInputUpdate('password', event.target.value)}\n              name={'password'}\n              placeholder={'Your password...'}/>\n            <TextField\n              label={'Confirm Password'}\n              variant={'outlined'}\n              margin={\"normal\"}\n              size={'medium'}\n              type={'password'}\n              fullWidth={true}\n              value={form.confirmPassword}\n              onChange={(event) => onInputUpdate('confirmPassword', event.target.value)}\n              name={'confirmPassword'}\n              placeholder={'Confirm your password...'}/>\n              <Grid container alignItems={'center'}>\n                <Checkbox\n                  checked={terms}\n                  onChange={() => setTerms(!terms)}\n                  name=\"terms\"\n                  color=\"primary\"\n                />\n                <Typography>\n                  By checking this, I agree on\n                </Typography>\n                <Button size={'small'} onClick={() => setDialog(true)} color={\"primary\"} variant={\"text\"}>\n                  Terms &  Conditions.\n                </Button>\n              </Grid>\n            <Dialog onClose={() => setDialog(false)} aria-labelledby=\"customized-dialog-title\" open={dialog}>\n              <DialogTitle id=\"customized-dialog-title\" onClose={() => setDialog(false)}>\n                Terms and Conditions\n              </DialogTitle>\n              <DialogContent dividers>\n                <Typography gutterBottom>\n                  Cras mattis consectetur purus sit amet fermentum. Cras justo odio, dapibus ac facilisis\n                  in, egestas eget quam. Morbi leo risus, porta ac consectetur ac, vestibulum at eros.\n                </Typography>\n              </DialogContent>\n              <DialogActions>\n                <Button autoFocus variant={\"contained\"} onClick={() => setDialog(false)} color=\"primary\">\n                  Close\n                </Button>\n              </DialogActions>\n            </Dialog>\n            <Typography gutterBottom={true} variant={'subtitle1'}>\n              Already have an account?\n              <Link to={'/sign-in'}>\n                <Button color={'primary'} size={'small'} variant={'text'}>\n                  Sign In\n                </Button>\n              </Link>\n            </Typography>\n            <Grid container justify={'center'}>\n              <Button disabled={form.email === '' || form.password !== form.confirmPassword || form.firstname === '' || form.lastname === '' || form.confirmPassword === '' || form.password === '' || isLoading || !terms} onClick={onSignUpClick} variant={'contained'} size={'large'} color={'primary'}>\n                {isLoading && <CircularProgress style={{marginRight: 5}} />}\n                Sign Up\n              </Button>\n            </Grid>\n          </CardContent>\n        </Card>\n      </Grid>\n    </Box>\n  )\n}\nexport default withSnackbar(SignUpPage);\n","import React from \"react\";\nconst ForgetPasswordPage = () => {\n  return (\n    <h1>Forget Password Page</h1>\n  )\n}\nexport default ForgetPasswordPage;\n","import React from \"react\";\nconst ResetPasswordPage = () => {\n  return (\n    <h1>Reset Password Page</h1>\n  )\n}\nexport default ResetPasswordPage;\n","import React from \"react\";\nconst VerifyEmailPage = () => {\n  return (\n    <h1>Verify Email Page</h1>\n  )\n}\nexport default VerifyEmailPage;\n","import React from \"react\";\nconst VerifyCodePage = () => {\n  return (\n    <h1>Verify Code Page</h1>\n  )\n}\nexport default VerifyCodePage;\n","import React from \"react\";\nimport {useSelector} from \"react-redux\";\nimport {Route, Redirect} from \"react-router-dom\";\nimport PropTypes from 'prop-types';\nconst GuestRoute = ({path, component: Component, ...rest}) => {\n  let {isLoggedIn} = useSelector(state => state.user);\n    return <Route path={path} {...rest} render={() => {\n      return !isLoggedIn ?\n        <Component /> :\n        <Redirect to={'/'} />\n    }} />\n}\nGuestRoute.prototype = {\n  path: PropTypes.string.isRequired,\n  component: PropTypes.func.isRequired,\n}\nexport default GuestRoute;\n","import React, {useEffect, useState} from \"react\";\nimport {\n  Box, Button,\n  Grid, Typography,\n} from \"@material-ui/core\";\nimport {getAllPollsRequest} from \"../../redux/actions\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport PollCard from \"../../components/polls/PollCard\";\nimport Filter from \"../../components/polls/Filter\";\nimport Loader from \"../../components/common/Loader\";\nimport MyFab from \"../../components/common/MyFab\";\nimport {withSnackbar} from \"notistack\";\nimport {Link} from \"react-router-dom\";\nimport {Result} from \"antd\";\n\nconst HomePage = ({enqueueSnackbar}) => {\n  const dispatch = useDispatch();\n  const {filteredPolls, polls} = useSelector(state => state.polls);\n  const {isLoading} = useSelector(state => state.loading);\n  useEffect(() => {\n    enqueueSnackbar('Fetching polls...', {variant: 'info'});\n    dispatch(getAllPollsRequest());\n  }, []);\n  if (isLoading) {\n    return (\n      <Loader/>\n    )\n  }\n  return (\n    <Box p={5}>\n      <Filter />\n      <MyFab to={'/polls/add'}/>\n      <Grid container alignItems={'center'} justify={'center'} spacing={2}>\n        {filteredPolls.map((poll) => <PollCard poll={poll} key={poll._id} />)}\n        {polls.length === 0 ?\n          <Result\n            status=\"500\"\n            title={<Typography align={'center'} variant={'h5'} gutterBottom={true}>Oops!</Typography>}\n            subTitle={<Typography align={'center'} variant={'h6'} gutterBottom={true}>No polls in the database yet...</Typography>}\n            extra={<Link to={'/polls/add'}>\n              <Grid container justify={'center'}>\n                <Button color={\"primary\"} variant={'contained'}>Create the first one?</Button>\n              </Grid>\n            </Link>}\n          />\n        :\n        filteredPolls.length === 0 && <Typography variant={'subtitle1'}>No polls under this category</Typography>\n        }\n      </Grid>\n    </Box>\n  )\n}\nexport default withSnackbar(HomePage);\n","import React from \"react\";\nimport {BrowserRouter, Switch, Route} from \"react-router-dom\";\nimport Header from \"./components/common/Header\";\nimport {Container} from \"@material-ui/core\";\nimport Error404Page from \"./pages/Error404Page\";\nimport UserProfilePage from \"./pages/account/UserProfilePage\";\nimport PollDetailsPage from \"./pages/polls/PollDetailsPage\";\nimport CreatePollPage from \"./pages/polls/CreatePollPage\";\nimport LeaderboardPage from \"./pages/LeaderboardPage\";\nimport PrivateRoute from \"./components/common/PrivateRoute\";\nimport MyProfilePage from \"./pages/account/MyProfilePage\";\nimport AccountSettingsPage from \"./pages/account/AccountSettingsPage\";\nimport MyPollsPage from \"./pages/polls/MyPollsPage\";\nimport SignInPage from \"./pages/auth/SignInPage\";\nimport SignUpPage from \"./pages/auth/SignUpPage\";\nimport ForgetPasswordPage from \"./pages/auth/ForgetPasswordPage\";\nimport ResetPasswordPage from \"./pages/auth/ResetPasswordPage\";\nimport VerifyEmailPage from \"./pages/auth/VerifyEmailPage\";\nimport VerifyCodePage from \"./pages/auth/VerifyCodePage\";\nimport GuestRoute from \"./components/common/GuestRoute\";\nimport HomePage from \"./pages/polls/HomePage\";\n\nfunction App() {\n  return (\n      <BrowserRouter>\n        <Header />\n        <Container>\n          <Switch>\n            <Route exact path={'/'} component={HomePage}/>\n            <PrivateRoute path={'/profile'} component={MyProfilePage}/>\n            <PrivateRoute path={'/settings'} component={AccountSettingsPage}/>\n            <PrivateRoute path={'/my-polls'} component={MyPollsPage}/>\n            <GuestRoute path={'/sign-in'} component={SignInPage}/>\n            <GuestRoute path={'/sign-up'} component={SignUpPage}/>\n            <GuestRoute path={'/forget-password'} component={ForgetPasswordPage}/>\n            <GuestRoute path={'/reset-password'} component={ResetPasswordPage}/>\n            <GuestRoute path={'/verify-email'} component={VerifyEmailPage}/>\n            <GuestRoute path={'/verify-code'} component={VerifyCodePage}/>\n            <Route path={'/user/:userId'} component={UserProfilePage}/>\n            <Route path={'/polls/add'} component={CreatePollPage}/>\n            <Route path={'/polls/:pollId'} component={PollDetailsPage}/>\n            <Route path={'/leaderboard'} component={LeaderboardPage}/>\n            <Route path={'/404'} component={Error404Page}/>\n            <Route component={Error404Page}/>\n          </Switch>\n        </Container>\n      </BrowserRouter>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {LOGOUT, SAVE_INFO_RESPONSE, SET_LOADING_STATE, SIGNIN_RESPONSE, UPLOAD_IMAGE_RESPONSE} from \"../types\";\nimport {merge} from 'lodash';\n\nconst INITIAL_STATE = {\n  isLoggedIn: false,\n  profile: {\n    firstname: '',\n    lastname: '',\n    email: '',\n    profilePicture: '',\n    _id: '',\n    createdPolls: [],\n    answeredPolls: [],\n    score: 0\n  },\n  savingImage: false,\n  savingInfo: false,\n  savingPassword: false,\n  token: ''\n};\nexport default function userReducer(state = INITIAL_STATE, action) {\n  const {type, payload, error} = action;\n  let newState = {};\n  switch(type) {\n    case SET_LOADING_STATE:\n      newState = merge({}, state);\n      newState[payload.key] = payload.value;\n      return newState;\n    case SAVE_INFO_RESPONSE:\n      newState = merge({}, state);\n      newState.profile = {\n        ...state.profile,\n        ...payload.info\n      };\n      return newState\n    case UPLOAD_IMAGE_RESPONSE:\n      newState = merge({}, state);\n      newState.profile.profilePicture = payload.profilePictureUrl;\n\n      return newState\n    case SIGNIN_RESPONSE:\n      newState = merge({}, state);\n      newState.isLoggedIn = true;\n      newState.token = payload.userData.token;\n      newState.profile = payload.userData.profile;\n      return newState\n    case LOGOUT:\n      newState = merge({}, INITIAL_STATE);\n      return newState;\n    default:\n      return state;\n  }\n}\n","const filterPollsBy = (polls, filterBy, userId) => {\n  let filteredPolls;\n  switch (filterBy) {\n    case 'latest':\n      filteredPolls = polls.sort((a, b) => b.createdAt - a.createdAt);\n      break;\n    case 'top':\n      filteredPolls = polls.sort((a, b) => b.totalAnswersCount - a.totalAnswersCount);\n      break;\n    case 'answered':\n      if (userId === '') {\n        filteredPolls = polls.filter((poll) => poll.answeredBy.length !== 0);\n      } else {\n        filteredPolls = polls.filter((poll) => poll.answeredBy.indexOf(userId) !== -1);\n      }\n      break;\n    case 'unanswered':\n      if (userId === '') {\n        filteredPolls = polls.filter((poll) => poll.answeredBy.length === 0);\n      } else {\n        filteredPolls = polls.filter((poll) => poll.answeredBy.indexOf(userId) === -1);\n      }\n      break;\n    default:\n      filteredPolls = [...polls];\n  }\n  return filteredPolls;\n};\n\nconst formatAuthorizationHeaders = token => {\n  return {'Authorization': `Bearer ${token}`};\n}\nexport {\n  filterPollsBy,\n  formatAuthorizationHeaders,\n}\n","import {\n  ANSWER_POLL_RESPONSE,\n  CLEAR_POLL_DATA,\n  GET_POLL_ERROR,\n  CLEAR_POLL_INPUTS, CREATE_POLL_RESPONSE, FILTER_POLLS,\n  GET_ALL_POLLS_RESPONSE, GET_LEADERBOARD_RESPONSE, GET_MY_POLLS_RESPONSE,\n  GET_POLL_RESPONSE,\n  UPDATE_POLL_INPUT\n} from \"../types\";\nimport {filterPollsBy} from \"../../helpers/functions\";\n\nconst INITIAL_STATE = {\n  pollData: {},\n  polls: [],\n  newPollData: {\n    title: '',\n    option1: '',\n    option2: ''\n  },\n  filteredPolls: [],\n  myPolls: [],\n  filterBy: \"unanswered\",\n  leaderboard: [],\n  pollError: ''\n}\n\nexport default function pollsReducer(state = INITIAL_STATE, action) {\n  const {type, payload, error} = action;\n  let filteredPolls;\n  switch (type) {\n    case GET_POLL_RESPONSE:\n      return {\n        ...state,\n        pollData: {...payload.pollData}\n      };\n    case GET_LEADERBOARD_RESPONSE:\n      return {\n        ...state,\n        leaderboard: [...payload.leaderboard]\n      };\n    case GET_POLL_ERROR:\n      return {\n        ...state,\n        pollError: error\n      };\n    case CREATE_POLL_RESPONSE:\n      return {\n        ...state,\n        polls: state.polls.concat([payload.poll])\n      };\n    case GET_MY_POLLS_RESPONSE:\n      return {\n        ...state,\n        myPolls: [...payload.polls],\n      };\n    case GET_ALL_POLLS_RESPONSE:\n      filteredPolls = filterPollsBy(payload.polls, 'unanswered');\n      return {\n        ...state,\n        polls: [...payload.polls],\n        filteredPolls: [...payload.polls],\n      };\n    case FILTER_POLLS:\n      let {filterBy, userId} = payload;\n      filteredPolls = filterPollsBy(state.polls, filterBy, userId);\n      return {\n        ...state,\n        filterBy,\n        filteredPolls: [...filteredPolls]\n      }\n    case CLEAR_POLL_DATA:\n      return {\n        ...state,\n        pollData: {...INITIAL_STATE.pollData}\n      };\n    case UPDATE_POLL_INPUT:\n      return {\n        ...state,\n        newPollData: {\n          ...state.newPollData,\n          [payload.key]: payload.value\n        }\n      };\n    case CLEAR_POLL_INPUTS:\n      return {\n        ...state,\n        newPollData: {\n          ...INITIAL_STATE.newPollData\n        }\n      };\n    default:\n      return state;\n  }\n}\n","import {SET_LOADING} from \"../types\";\n\nconst INITIAL_STATE = {\n  isLoading: false\n}\n\nexport default function loadingReducer(state = INITIAL_STATE, {type, payload}) {\n  switch (type) {\n    case SET_LOADING:\n      return {\n        isLoading: payload.isLoading\n      }\n    default:\n      return state;\n  }\n}\n","import {SIGNIN_ERROR, SIGNUP_ERROR} from \"../types\";\n\nconst INITIAL_STATE = {\n  login: {\n    email: '',\n    password: ''\n  },\n  signup: {\n    email: '',\n    password: '',\n    firstname: '',\n    lastname: '',\n  },\n  signInError: '',\n  signUpError: '',\n}\nexport default function authReducer(state = INITIAL_STATE, action) {\n  const {type, payload, error} = action;\n  switch(type) {\n    case SIGNIN_ERROR:\n      return {\n        ...state,\n        signInError: error\n      };\n    case SIGNUP_ERROR:\n      return {\n        ...state,\n        signUpError: error,\n      }\n    default:\n      return state;\n  }\n}\n","import {combineReducers} from \"redux\";\nimport user from './user';\nimport polls from './polls';\nimport loading from './loading';\nimport auth from './auth';\nconst rootReducer = combineReducers({user, polls, loading, auth});\nexport default rootReducer;\n","\nconst getToken = state => state.user.token;\nexport {getToken}\n","import axios from 'axios';\nimport {API_URL} from \"../config/constants\";\nexport default function API(route, method, data, headers) {\n  return axios({\n    method,\n    url: `${API_URL}/${route}`,\n    headers,\n    data\n  });\n}\n","const API_URL = '/api';\n\nexport {\n  API_URL\n}","import {\n  clearPollInputs,\n  createPollResponse,\n  getAllPollsResponse, getLeaderboardResponse,\n  getMyPollsResponse, getPollRequest,\n  getPollResponse,\n  setLoading,\n  getPollError\n} from \"../actions\";\nimport {call, put, select, takeLatest} from 'redux-saga/effects';\nimport {\n  ANSWER_POLL_REQUEST,\n  CREATE_POLL_REQUEST,\n  GET_ALL_POLLS_REQUEST, GET_LEADERBOARD_REQUEST,\n  GET_MY_POLLS_REQUEST,\n  GET_POLL_REQUEST\n} from \"../types\";\nimport {getToken} from \"../selectors\";\nimport API from \"../../api\";\nimport {formatAuthorizationHeaders} from \"../../helpers/functions\";\n\nfunction* createPoll() {\n  yield put(setLoading(true));\n  try {\n    const token = yield select(getToken);\n    const {newPollData} = yield select(state => state.polls);\n    const response = yield call(API,'polls', 'post', newPollData, formatAuthorizationHeaders(token));\n    yield put(createPollResponse(response.data));\n    yield put(clearPollInputs());\n    yield put(setLoading(false));\n  } catch (e) {\n    console.error(e);\n  }\n}\n\nfunction* answerPoll({payload}) {\n  yield put(setLoading(true));\n  try {\n    const token = yield select(getToken);\n    const response = yield call(API,'polls/answer', 'post', payload, formatAuthorizationHeaders(token));\n    yield put(getPollResponse(response.data));\n    yield put(clearPollInputs());\n    yield put(getPollRequest(payload.pollId));\n  } catch (e) {\n    console.error(e);\n  }\n}\n\nfunction* getAllPolls() {\n  yield put(setLoading(true));\n  try {\n    const response = yield call(API,'polls', 'get');\n    yield put(getAllPollsResponse(response.data));\n    yield put(setLoading(false));\n  } catch (e) {\n    console.error(e);\n  }\n}\n\nfunction* getMyPolls() {\n  yield put(setLoading(true));\n  try {\n    const token = yield select(getToken);\n    const response = yield call(API,'polls/my-polls', 'get', {}, formatAuthorizationHeaders(token));\n    yield put(getMyPollsResponse(response.data));\n    yield put(setLoading(false));\n  } catch (e) {\n    console.error(e);\n  }\n}\nfunction* getLeaderboard() {\n  yield put(setLoading(true));\n  try {\n    const response = yield call(API,'polls/leaderboard', 'get', {});\n    yield put(getLeaderboardResponse(response.data));\n    yield put(setLoading(false));\n  } catch (e) {\n    console.error(e);\n  }\n}\nfunction* getPollDetails(action) {\n  yield put(setLoading(true));\n  yield put(getPollError(''));\n  try {\n    const token = yield select(getToken);\n    const response = yield call(API,`polls/${action.payload.pollId}`, 'get', {}, formatAuthorizationHeaders(token));\n    if (response.data.error) {\n      yield put(getPollError(response.data.error));\n    } else {\n      yield put(getPollResponse(response.data));\n    }\n    yield put(setLoading(false));\n  } catch (e) {\n    console.error(e);\n  }\n}\n\nfunction* getPollDetailsWatcher() {\n  yield takeLatest(GET_POLL_REQUEST, getPollDetails);\n}\n\nfunction* createPollWatcher() {\n  yield takeLatest(CREATE_POLL_REQUEST, createPoll);\n}\n\nfunction* answerPollWatcher() {\n  yield takeLatest(ANSWER_POLL_REQUEST, answerPoll);\n}\n\nfunction* getAllPollsWatcher() {\n  yield takeLatest(GET_ALL_POLLS_REQUEST, getAllPolls);\n}\n\nfunction* getMyPollsWatcher() {\n  yield takeLatest(GET_MY_POLLS_REQUEST, getMyPolls);\n}\nfunction* getLeaderboardWatcher() {\n  yield takeLatest(GET_LEADERBOARD_REQUEST, getLeaderboard);\n}\n\nexport {\n  createPollWatcher,\n  getAllPollsWatcher,\n  getMyPollsWatcher,\n  getPollDetailsWatcher,\n  answerPollWatcher,\n  getLeaderboardWatcher\n}\n","import {call, put, select, delay, takeLatest} from \"redux-saga/effects\";\nimport {getToken} from \"../selectors\";\nimport API from \"../../api\";\nimport {formatAuthorizationHeaders} from \"../../helpers/functions\";\nimport {CHANGE_PASSWORD_REQUEST, SAVE_INFO_REQUEST, UPLOAD_IMAGE_REQUEST} from \"../types\";\nimport {saveInfoResponse, setLoadingState, uploadImageResponse} from \"../actions/user\";\n\nfunction* updateUserInfo({payload}) {\n  yield put(setLoadingState('savingInfo', true));\n  try {\n    const token = yield select(getToken);\n    yield call(API,`users/`, 'put', payload.info, formatAuthorizationHeaders(token));\n    yield put(saveInfoResponse({...payload.info}));\n    yield put(setLoadingState('savingInfo', false));\n  } catch (e) {\n    console.error(e);\n  }\n}\n\nfunction* updateUserImage({payload}) {\n  yield put(setLoadingState('savingImage', true));\n  try {\n    const token = yield select(getToken);\n    const formData = new FormData();\n    formData.append('image', payload.imageData);\n    const response = yield call(API,`users/upload-image`, 'post', formData, {\n      ...formatAuthorizationHeaders(token),\n      'Content-Type': 'multipart/form-data'\n    });\n    yield put(uploadImageResponse(response.data));\n    yield put(setLoadingState('savingImage', false));\n  } catch (e) {\n    console.error(e);\n  }\n}\n\nfunction* changePassword({payload}) {\n  yield put(setLoadingState('savingPassword', true));\n  try {\n    const token = yield select(getToken);\n    yield call(API,`users/change-password`, 'put', {password: payload.password}, formatAuthorizationHeaders(token));\n    yield put(setLoadingState('savingPassword', false));\n  } catch (e) {\n    console.error(e);\n  }\n}\n\nfunction* updateUserImageWatcher() {\n  yield takeLatest(UPLOAD_IMAGE_REQUEST, updateUserImage);\n}\n\nfunction* updateUserInfoWatcher() {\n  yield takeLatest(SAVE_INFO_REQUEST, updateUserInfo);\n}\n\nfunction* changePasswordWatcher() {\n  yield takeLatest(CHANGE_PASSWORD_REQUEST, changePassword);\n}\n\nexport {\n  updateUserInfoWatcher,\n  changePasswordWatcher,\n  updateUserImageWatcher\n}\n","import {call, put, takeLatest} from \"redux-saga/effects\";\nimport {setLoading, setSignInError, setSignUpError, signInResponse} from \"../actions\";\nimport API from \"../../api\";\nimport {SIGNIN_REQUEST, SIGNUP_REQUEST} from \"../types\";\n\nfunction* signIn({payload}) {\n  yield put(setLoading(true));\n  try {\n    const response = yield call(API,`users/sign-in`, 'post', payload.loginData);\n    if (response.data.error) {\n      yield put(setSignInError(response.data.error));\n    } else {\n      yield put(signInResponse(response.data));\n    }    yield put(setLoading(false));\n  } catch (e) {\n    console.error(e);\n  }\n}\n\nfunction* signUp({payload}) {\n  yield put(setLoading(true));\n  try {\n    const response = yield call(API,`users/sign-up`, 'post', payload.signUpData);\n    if (response.data.error) {\n      yield put(setSignUpError(response.data.error));\n    } else {\n      yield put(signInResponse(response.data));\n    }\n    yield put(setLoading(false));\n  } catch (e) {\n    console.error(e);\n  }\n}\n\nfunction* signUpWatcher() {\n  yield takeLatest(SIGNUP_REQUEST, signUp);\n}\n\nfunction* signInWatcher() {\n  yield takeLatest(SIGNIN_REQUEST, signIn);\n}\nexport {\n  signInWatcher,\n  signUpWatcher\n}\n","import {\n  answerPollWatcher,\n  createPollWatcher,\n  getAllPollsWatcher, getLeaderboardWatcher,\n  getMyPollsWatcher,\n  getPollDetailsWatcher\n} from \"./polls\";\nimport { all} from 'redux-saga/effects';\nimport {changePasswordWatcher, updateUserImageWatcher, updateUserInfoWatcher} from \"./user\";\nimport {signInWatcher, signUpWatcher} from \"./auth\";\nfunction* rootSaga() {\n  yield all([\n    createPollWatcher(),\n    getAllPollsWatcher(),\n    getMyPollsWatcher(),\n    getPollDetailsWatcher(),\n    answerPollWatcher(),\n    getLeaderboardWatcher(),\n    updateUserInfoWatcher(),\n    changePasswordWatcher(),\n    updateUserImageWatcher(),\n    signInWatcher(),\n    signUpWatcher()\n  ])\n}\nexport default rootSaga;\n","import {applyMiddleware, createStore} from \"redux\";\nimport createSagaMiddleware from 'redux-saga';\nimport { persistStore, persistReducer } from 'redux-persist'\nimport storage from 'redux-persist/lib/storage' // defaults to localStorage for web\n\nconst persistConfig = {\n  key: 'root',\n  storage,\n}\n\nimport rootReducer from \"./reducers\";\nimport rootSaga from \"./sagas\";\nimport {createLogger} from \"redux-logger\";\nconst logger = createLogger();\nconst sagaMiddleware = createSagaMiddleware();\nconst persistedReducer = persistReducer(persistConfig, rootReducer)\n\nconst store = createStore(persistedReducer, applyMiddleware(sagaMiddleware, logger));\nconst persistor = persistStore(store)\nsagaMiddleware.run(rootSaga);\nexport {store, persistor};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {Provider} from \"react-redux\";\nimport {ThemeProvider} from \"@material-ui/styles\";\nimport theme from \"./config/theme\";\nimport {SnackbarProvider} from \"notistack\";\nimport {store, persistor} from \"./redux/store\";\nimport { PersistGate } from 'redux-persist/integration/react'\nimport Loader from \"./components/common/Loader\";\nReactDOM.render(\n  // Remove Strict mode to use notifications\n  // <React.StrictMode>\n  //   <App />\n  // </React.StrictMode>\n\n  <Provider store={store}>\n    <PersistGate persistor={persistor} loading={<Loader/>}>\n      <ThemeProvider theme={theme}>\n        <SnackbarProvider maxSnack={3} autoHideDuration={3000} disableWindowBlurListener={true}>\n          <App />\n        </SnackbarProvider>\n      </ThemeProvider>\n    </PersistGate>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}